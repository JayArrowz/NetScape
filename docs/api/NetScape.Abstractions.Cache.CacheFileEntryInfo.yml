### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo
  commentId: T:NetScape.Abstractions.Cache.CacheFileEntryInfo
  id: CacheFileEntryInfo
  parent: NetScape.Abstractions.Cache
  children:
  - NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone
  - NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
  - NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
  langs:
  - csharp
  - vb
  name: CacheFileEntryInfo
  nameWithType: CacheFileEntryInfo
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: CacheFileEntryInfo
    path: src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
    startLine: 5
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nRepresents metadata of an entry within a <xref href=\"NetScape.Abstractions.Cache.CacheFileInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class CacheFileEntryInfo
    content.vb: Public Class CacheFileEntryInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
  commentId: P:NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
  id: EntryId
  parent: NetScape.Abstractions.Cache.CacheFileEntryInfo
  langs:
  - csharp
  - vb
  name: EntryId
  nameWithType: CacheFileEntryInfo.EntryId
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: EntryId
    path: src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
    startLine: 10
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nThe entry&apos;s id.\n"
  example: []
  syntax:
    content: public int? EntryId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property EntryId As Integer?
  overload: NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
  commentId: P:NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
  id: Identifier
  parent: NetScape.Abstractions.Cache.CacheFileEntryInfo
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: CacheFileEntryInfo.Identifier
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Identifier
    path: src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
    startLine: 15
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nThis entry&apos;s identifier.\n"
  example: []
  syntax:
    content: public int? Identifier { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Identifier As Integer?
  overload: NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone
  commentId: M:NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone
  id: Clone
  parent: NetScape.Abstractions.Cache.CacheFileEntryInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CacheFileEntryInfo.Clone()
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Clone
    path: src/NetScape.Abstractions/Cache/CacheFileEntryInfo.cs
    startLine: 21
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nReturns a copy of this object with the same values.\n"
  example: []
  syntax:
    content: public CacheFileEntryInfo Clone()
    return:
      type: NetScape.Abstractions.Cache.CacheFileEntryInfo
      description: ''
    content.vb: Public Function Clone As CacheFileEntryInfo
  overload: NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NetScape.Abstractions.Cache.CacheFileInfo
  commentId: T:NetScape.Abstractions.Cache.CacheFileInfo
  parent: NetScape.Abstractions.Cache
  name: CacheFileInfo
  nameWithType: CacheFileInfo
  fullName: NetScape.Abstractions.Cache.CacheFileInfo
- uid: NetScape.Abstractions.Cache
  commentId: N:NetScape.Abstractions.Cache
  name: NetScape.Abstractions.Cache
  nameWithType: NetScape.Abstractions.Cache
  fullName: NetScape.Abstractions.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId*
  commentId: Overload:NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
  name: EntryId
  nameWithType: CacheFileEntryInfo.EntryId
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.EntryId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier*
  commentId: Overload:NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
  name: Identifier
  nameWithType: CacheFileEntryInfo.Identifier
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.Identifier
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone*
  commentId: Overload:NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone
  name: Clone
  nameWithType: CacheFileEntryInfo.Clone
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo.Clone
- uid: NetScape.Abstractions.Cache.CacheFileEntryInfo
  commentId: T:NetScape.Abstractions.Cache.CacheFileEntryInfo
  parent: NetScape.Abstractions.Cache
  name: CacheFileEntryInfo
  nameWithType: CacheFileEntryInfo
  fullName: NetScape.Abstractions.Cache.CacheFileEntryInfo
