### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Extensions.ExtensionGuesser
  commentId: T:NetScape.Abstractions.Extensions.ExtensionGuesser
  id: ExtensionGuesser
  parent: NetScape.Abstractions.Extensions
  children:
  - NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber(System.Byte[],System.Byte[])
  - NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension(System.Byte[])
  langs:
  - csharp
  - vb
  name: ExtensionGuesser
  nameWithType: ExtensionGuesser
  fullName: NetScape.Abstractions.Extensions.ExtensionGuesser
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ExtensionGuesser
    path: src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
    startLine: 11
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  summary: "\nExtendable implementation of IExtensionGuesser.\nAllows dynamic addition and removal of actions.\n\nTODO: Parse based on CacheFile (without re-encoding?), so that info can be used.\n"
  example: []
  syntax:
    content: public static class ExtensionGuesser
    content.vb: Public Module ExtensionGuesser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension(System.Byte[])
  commentId: M:NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension(System.Byte[])
  id: GuessExtension(System.Byte[])
  parent: NetScape.Abstractions.Extensions.ExtensionGuesser
  langs:
  - csharp
  - vb
  name: GuessExtension(Byte[])
  nameWithType: ExtensionGuesser.GuessExtension(Byte[])
  fullName: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension(System.Byte[])
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GuessExtension
    path: src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
    startLine: 13
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static string GuessExtension(byte[] fileData)
    parameters:
    - id: fileData
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function GuessExtension(fileData As Byte()) As String
  overload: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension*
  nameWithType.vb: ExtensionGuesser.GuessExtension(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension(System.Byte())
  name.vb: GuessExtension(Byte())
- uid: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber(System.Byte[],System.Byte[])
  commentId: M:NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber(System.Byte[],System.Byte[])
  id: DataHasMagicNumber(System.Byte[],System.Byte[])
  parent: NetScape.Abstractions.Extensions.ExtensionGuesser
  langs:
  - csharp
  - vb
  name: DataHasMagicNumber(Byte[], Byte[])
  nameWithType: ExtensionGuesser.DataHasMagicNumber(Byte[], Byte[])
  fullName: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: DataHasMagicNumber
    path: src/NetScape.Abstractions/Extensions/ExtensionGuesser.cs
    startLine: 114
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  summary: "\nHelper method to test if a file starts with given bytes.\n"
  example: []
  syntax:
    content: public static bool DataHasMagicNumber(byte[] fileData, byte[] magicNumber)
    parameters:
    - id: fileData
      type: System.Byte[]
      description: ''
    - id: magicNumber
      type: System.Byte[]
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function DataHasMagicNumber(fileData As Byte(), magicNumber As Byte()) As Boolean
  overload: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber*
  nameWithType.vb: ExtensionGuesser.DataHasMagicNumber(Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber(System.Byte(), System.Byte())
  name.vb: DataHasMagicNumber(Byte(), Byte())
references:
- uid: NetScape.Abstractions.Extensions
  commentId: N:NetScape.Abstractions.Extensions
  name: NetScape.Abstractions.Extensions
  nameWithType: NetScape.Abstractions.Extensions
  fullName: NetScape.Abstractions.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension*
  commentId: Overload:NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension
  name: GuessExtension
  nameWithType: ExtensionGuesser.GuessExtension
  fullName: NetScape.Abstractions.Extensions.ExtensionGuesser.GuessExtension
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber*
  commentId: Overload:NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber
  name: DataHasMagicNumber
  nameWithType: ExtensionGuesser.DataHasMagicNumber
  fullName: NetScape.Abstractions.Extensions.ExtensionGuesser.DataHasMagicNumber
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
