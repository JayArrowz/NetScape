### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  commentId: T:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  id: MasterReferenceTableFile
  parent: NetScape.Modules.Cache.FileTypes
  children:
  - NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode(System.Byte[])
  - NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode
  - NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables
  - NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
  - NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  langs:
  - csharp
  - vb
  name: MasterReferenceTableFile
  nameWithType: MasterReferenceTableFile
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: MasterReferenceTableFile
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 13
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  summary: "\nA master reference table holds information on the other reference tables.\nThis is stored in a separate class, as the\n"
  example: []
  syntax:
    content: 'public class MasterReferenceTableFile : CacheFileBase'
    content.vb: >-
      Public Class MasterReferenceTableFile
          Inherits CacheFileBase
  inheritance:
  - System.Object
  - NetScape.Abstractions.Cache.CacheFileBase
  inheritedMembers:
  - NetScape.Abstractions.Cache.CacheFileBase.Info
  - NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  - NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
  commentId: P:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
  id: ReferenceTables
  parent: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  langs:
  - csharp
  - vb
  name: ReferenceTables
  nameWithType: MasterReferenceTableFile.ReferenceTables
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ReferenceTables
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 15
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public Dictionary<CacheIndex, MasterReferenceTableFile.ReferenceTableInfo> ReferenceTables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo}
    content.vb: Public ReadOnly Property ReferenceTables As Dictionary(Of CacheIndex, MasterReferenceTableFile.ReferenceTableInfo)
  overload: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  commentId: P:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  id: RsaEncryptedWhirlpoolDigest
  parent: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  langs:
  - csharp
  - vb
  name: RsaEncryptedWhirlpoolDigest
  nameWithType: MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: RsaEncryptedWhirlpoolDigest
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 17
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public byte[] RsaEncryptedWhirlpoolDigest { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property RsaEncryptedWhirlpoolDigest As Byte()
  overload: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables
  commentId: M:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables
  id: GetAvailableReferenceTables
  parent: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  langs:
  - csharp
  - vb
  name: GetAvailableReferenceTables()
  nameWithType: MasterReferenceTableFile.GetAvailableReferenceTables()
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetAvailableReferenceTables
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 19
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public Dictionary<CacheIndex, MasterReferenceTableFile.ReferenceTableInfo> GetAvailableReferenceTables()
    return:
      type: System.Collections.Generic.Dictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo}
    content.vb: Public Function GetAvailableReferenceTables As Dictionary(Of CacheIndex, MasterReferenceTableFile.ReferenceTableInfo)
  overload: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode(System.Byte[])
  commentId: M:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  langs:
  - csharp
  - vb
  name: Decode(Byte[])
  nameWithType: MasterReferenceTableFile.Decode(Byte[])
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode(System.Byte[])
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Decode
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 23
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public override void Decode(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    content.vb: Public Overrides Sub Decode(data As Byte())
  overridden: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  overload: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode*
  nameWithType.vb: MasterReferenceTableFile.Decode(Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode(System.Byte())
  name.vb: Decode(Byte())
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode
  commentId: M:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode
  id: Encode
  parent: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile
  langs:
  - csharp
  - vb
  name: Encode()
  nameWithType: MasterReferenceTableFile.Encode()
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Encode
    path: src/NetScape.Modules.Cache/FileTypes/MasterReferenceTableFile.cs
    startLine: 53
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public override byte[] Encode()
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function Encode As Byte()
  overridden: NetScape.Abstractions.Cache.CacheFileBase.Encode
  overload: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NetScape.Modules.Cache.FileTypes
  commentId: N:NetScape.Modules.Cache.FileTypes
  name: NetScape.Modules.Cache.FileTypes
  nameWithType: NetScape.Modules.Cache.FileTypes
  fullName: NetScape.Modules.Cache.FileTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetScape.Abstractions.Cache.CacheFileBase
  commentId: T:NetScape.Abstractions.Cache.CacheFileBase
  parent: NetScape.Abstractions.Cache
  name: CacheFileBase
  nameWithType: CacheFileBase
  fullName: NetScape.Abstractions.Cache.CacheFileBase
- uid: NetScape.Abstractions.Cache.CacheFileBase.Info
  commentId: P:NetScape.Abstractions.Cache.CacheFileBase.Info
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: Info
  nameWithType: CacheFileBase.Info
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Info
- uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: FromBinaryFile(BinaryFile)
  nameWithType: CacheFileBase.FromBinaryFile(BinaryFile)
  fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: FromBinaryFile
    nameWithType: CacheFileBase.FromBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: FromBinaryFile
    nameWithType: CacheFileBase.FromBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: ToBinaryFile()
  nameWithType: CacheFileBase.ToBinaryFile()
  fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile()
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
    name: ToBinaryFile
    nameWithType: CacheFileBase.ToBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
    name: ToBinaryFile
    nameWithType: CacheFileBase.ToBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Cache
  commentId: N:NetScape.Abstractions.Cache
  name: NetScape.Abstractions.Cache
  nameWithType: NetScape.Abstractions.Cache
  fullName: NetScape.Abstractions.Cache
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
  name: ReferenceTables
  nameWithType: MasterReferenceTableFile.ReferenceTables
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTables
- uid: System.Collections.Generic.Dictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo}
  commentId: T:System.Collections.Generic.Dictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<CacheIndex, MasterReferenceTableFile.ReferenceTableInfo>
  nameWithType: Dictionary<CacheIndex, MasterReferenceTableFile.ReferenceTableInfo>
  fullName: System.Collections.Generic.Dictionary<NetScape.Abstractions.Cache.CacheIndex, NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo>
  nameWithType.vb: Dictionary(Of CacheIndex, MasterReferenceTableFile.ReferenceTableInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of NetScape.Abstractions.Cache.CacheIndex, NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo)
  name.vb: Dictionary(Of CacheIndex, MasterReferenceTableFile.ReferenceTableInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo
    name: MasterReferenceTableFile.ReferenceTableInfo
    nameWithType: MasterReferenceTableFile.ReferenceTableInfo
    fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo
    name: MasterReferenceTableFile.ReferenceTableInfo
    nameWithType: MasterReferenceTableFile.ReferenceTableInfo
    fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.ReferenceTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  name: RsaEncryptedWhirlpoolDigest
  nameWithType: MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.RsaEncryptedWhirlpoolDigest
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables
  name: GetAvailableReferenceTables
  nameWithType: MasterReferenceTableFile.GetAvailableReferenceTables
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.GetAvailableReferenceTables
- uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  parent: NetScape.Abstractions.Cache.CacheFileBase
  isExternal: true
  name: Decode(Byte[])
  nameWithType: CacheFileBase.Decode(Byte[])
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  nameWithType.vb: CacheFileBase.Decode(Byte())
  fullName.vb: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte())
  name.vb: Decode(Byte())
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
    name: Decode
    nameWithType: CacheFileBase.Decode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
    name: Decode
    nameWithType: CacheFileBase.Decode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode
  name: Decode
  nameWithType: MasterReferenceTableFile.Decode
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Decode
- uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.Encode
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: Encode()
  nameWithType: CacheFileBase.Encode()
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode()
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
    name: Encode
    nameWithType: CacheFileBase.Encode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
    name: Encode
    nameWithType: CacheFileBase.Encode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode
  name: Encode
  nameWithType: MasterReferenceTableFile.Encode
  fullName: NetScape.Modules.Cache.FileTypes.MasterReferenceTableFile.Encode
