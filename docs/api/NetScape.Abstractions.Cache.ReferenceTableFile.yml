### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Cache.ReferenceTableFile
  commentId: T:NetScape.Abstractions.Cache.ReferenceTableFile
  id: ReferenceTableFile
  parent: NetScape.Abstractions.Cache
  children:
  - NetScape.Abstractions.Cache.ReferenceTableFile.Decode(System.Byte[])
  - NetScape.Abstractions.Cache.ReferenceTableFile.Encode
  - NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
  - NetScape.Abstractions.Cache.ReferenceTableFile.Format
  - NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo(System.Int32)
  - NetScape.Abstractions.Cache.ReferenceTableFile.Options
  - NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo(System.Int32,NetScape.Abstractions.Cache.CacheFileInfo)
  - NetScape.Abstractions.Cache.ReferenceTableFile.Version
  langs:
  - csharp
  - vb
  name: ReferenceTableFile
  nameWithType: ReferenceTableFile
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ReferenceTableFile
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 17
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nA <xref href=\"NetScape.Abstractions.Cache.ReferenceTableFile\" data-throw-if-not-resolved=\"false\"></xref> holds metadata for all registered files in an index, such as checksums, versions\nand archive members.\nNote that the data of registered files does not have to be present in the index for them to be listed.\n"
  example: []
  syntax:
    content: 'public class ReferenceTableFile : CacheFileBase'
    content.vb: >-
      Public Class ReferenceTableFile
          Inherits CacheFileBase
  inheritance:
  - System.Object
  - NetScape.Abstractions.Cache.CacheFileBase
  inheritedMembers:
  - NetScape.Abstractions.Cache.CacheFileBase.Info
  - NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  - NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
  commentId: P:NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
  id: FileIds
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: FileIds
  nameWithType: ReferenceTableFile.FileIds
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FileIds
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 28
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nGets the ids of the files listed in this <xref href=\"NetScape.Abstractions.Cache.ReferenceTableFile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int[] FileIds { get; }
    parameters: []
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public ReadOnly Property FileIds As Integer()
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.FileIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Format
  commentId: P:NetScape.Abstractions.Cache.ReferenceTableFile.Format
  id: Format
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: ReferenceTableFile.Format
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Format
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Format
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 33
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nThe format of this table.\n"
  example: []
  syntax:
    content: public byte Format { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property Format As Byte
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.Format*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Options
  commentId: P:NetScape.Abstractions.Cache.ReferenceTableFile.Options
  id: Options
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ReferenceTableFile.Options
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Options
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Options
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 38
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nThe flags of this table.\n"
  example: []
  syntax:
    content: public CacheFileOptions Options { get; set; }
    parameters: []
    return:
      type: NetScape.Abstractions.Cache.CacheFileOptions
    content.vb: Public Property Options As CacheFileOptions
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Version
  commentId: P:NetScape.Abstractions.Cache.ReferenceTableFile.Version
  id: Version
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ReferenceTableFile.Version
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Version
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Version
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 43
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nThe version of this table.\n"
  example: []
  syntax:
    content: public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Version As Integer
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo(System.Int32)
  commentId: M:NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo(System.Int32)
  id: GetFileInfo(System.Int32)
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: GetFileInfo(Int32)
  nameWithType: ReferenceTableFile.GetFileInfo(Int32)
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo(System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetFileInfo
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 49
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  summary: "\nGets the <xref href=\"NetScape.Abstractions.Cache.CacheFileInfo\" data-throw-if-not-resolved=\"false\"></xref> for the given file in the index described by this <xref href=\"NetScape.Abstractions.Cache.ReferenceTableFile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CacheFileInfo GetFileInfo(int fileId)
    parameters:
    - id: fileId
      type: System.Int32
    return:
      type: NetScape.Abstractions.Cache.CacheFileInfo
      description: ''
    content.vb: Public Function GetFileInfo(fileId As Integer) As CacheFileInfo
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo(System.Int32,NetScape.Abstractions.Cache.CacheFileInfo)
  commentId: M:NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo(System.Int32,NetScape.Abstractions.Cache.CacheFileInfo)
  id: SetFileInfo(System.Int32,NetScape.Abstractions.Cache.CacheFileInfo)
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: SetFileInfo(Int32, CacheFileInfo)
  nameWithType: ReferenceTableFile.SetFileInfo(Int32, CacheFileInfo)
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo(System.Int32, NetScape.Abstractions.Cache.CacheFileInfo)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: SetFileInfo
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 59
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  syntax:
    content: public void SetFileInfo(int fileId, CacheFileInfo info)
    parameters:
    - id: fileId
      type: System.Int32
    - id: info
      type: NetScape.Abstractions.Cache.CacheFileInfo
    content.vb: Public Sub SetFileInfo(fileId As Integer, info As CacheFileInfo)
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Decode(System.Byte[])
  commentId: M:NetScape.Abstractions.Cache.ReferenceTableFile.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: Decode(Byte[])
  nameWithType: ReferenceTableFile.Decode(Byte[])
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Decode(System.Byte[])
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Decode
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 71
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  syntax:
    content: public override void Decode(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    content.vb: Public Overrides Sub Decode(data As Byte())
  overridden: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.Decode*
  nameWithType.vb: ReferenceTableFile.Decode(Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: NetScape.Abstractions.Cache.ReferenceTableFile.Decode(System.Byte())
  name.vb: Decode(Byte())
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Encode
  commentId: M:NetScape.Abstractions.Cache.ReferenceTableFile.Encode
  id: Encode
  parent: NetScape.Abstractions.Cache.ReferenceTableFile
  langs:
  - csharp
  - vb
  name: Encode()
  nameWithType: ReferenceTableFile.Encode()
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Encode()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Encode
    path: src/NetScape.Abstractions/Cache/ReferenceTableFile.cs
    startLine: 201
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Cache
  syntax:
    content: public override byte[] Encode()
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function Encode As Byte()
  overridden: NetScape.Abstractions.Cache.CacheFileBase.Encode
  overload: NetScape.Abstractions.Cache.ReferenceTableFile.Encode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NetScape.Abstractions.Cache.ReferenceTableFile
  commentId: T:NetScape.Abstractions.Cache.ReferenceTableFile
  parent: NetScape.Abstractions.Cache
  name: ReferenceTableFile
  nameWithType: ReferenceTableFile
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile
- uid: NetScape.Abstractions.Cache
  commentId: N:NetScape.Abstractions.Cache
  name: NetScape.Abstractions.Cache
  nameWithType: NetScape.Abstractions.Cache
  fullName: NetScape.Abstractions.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetScape.Abstractions.Cache.CacheFileBase
  commentId: T:NetScape.Abstractions.Cache.CacheFileBase
  parent: NetScape.Abstractions.Cache
  name: CacheFileBase
  nameWithType: CacheFileBase
  fullName: NetScape.Abstractions.Cache.CacheFileBase
- uid: NetScape.Abstractions.Cache.CacheFileBase.Info
  commentId: P:NetScape.Abstractions.Cache.CacheFileBase.Info
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: Info
  nameWithType: CacheFileBase.Info
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Info
- uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: FromBinaryFile(BinaryFile)
  nameWithType: CacheFileBase.FromBinaryFile(BinaryFile)
  fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: FromBinaryFile
    nameWithType: CacheFileBase.FromBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: FromBinaryFile
    nameWithType: CacheFileBase.FromBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.FromBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: ToBinaryFile()
  nameWithType: CacheFileBase.ToBinaryFile()
  fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile()
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
    name: ToBinaryFile
    nameWithType: CacheFileBase.ToBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
    name: ToBinaryFile
    nameWithType: CacheFileBase.ToBinaryFile
    fullName: NetScape.Abstractions.Cache.CacheFileBase.ToBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.FileIds*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
  name: FileIds
  nameWithType: ReferenceTableFile.FileIds
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.FileIds
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Format*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.Format
  name: Format
  nameWithType: ReferenceTableFile.Format
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Format
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Options*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.Options
  name: Options
  nameWithType: ReferenceTableFile.Options
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Options
- uid: NetScape.Abstractions.Cache.CacheFileOptions
  commentId: T:NetScape.Abstractions.Cache.CacheFileOptions
  parent: NetScape.Abstractions.Cache
  name: CacheFileOptions
  nameWithType: CacheFileOptions
  fullName: NetScape.Abstractions.Cache.CacheFileOptions
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Version*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.Version
  name: Version
  nameWithType: ReferenceTableFile.Version
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Abstractions.Cache.CacheFileInfo
  commentId: T:NetScape.Abstractions.Cache.CacheFileInfo
  parent: NetScape.Abstractions.Cache
  name: CacheFileInfo
  nameWithType: CacheFileInfo
  fullName: NetScape.Abstractions.Cache.CacheFileInfo
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo
  name: GetFileInfo
  nameWithType: ReferenceTableFile.GetFileInfo
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.GetFileInfo
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo
  name: SetFileInfo
  nameWithType: ReferenceTableFile.SetFileInfo
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.SetFileInfo
- uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  parent: NetScape.Abstractions.Cache.CacheFileBase
  isExternal: true
  name: Decode(Byte[])
  nameWithType: CacheFileBase.Decode(Byte[])
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
  nameWithType.vb: CacheFileBase.Decode(Byte())
  fullName.vb: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte())
  name.vb: Decode(Byte())
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
    name: Decode
    nameWithType: CacheFileBase.Decode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Decode(System.Byte[])
    name: Decode
    nameWithType: CacheFileBase.Decode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Decode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Decode*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.Decode
  name: Decode
  nameWithType: ReferenceTableFile.Decode
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Decode
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
  commentId: M:NetScape.Abstractions.Cache.CacheFileBase.Encode
  parent: NetScape.Abstractions.Cache.CacheFileBase
  name: Encode()
  nameWithType: CacheFileBase.Encode()
  fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode()
  spec.csharp:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
    name: Encode
    nameWithType: CacheFileBase.Encode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Abstractions.Cache.CacheFileBase.Encode
    name: Encode
    nameWithType: CacheFileBase.Encode
    fullName: NetScape.Abstractions.Cache.CacheFileBase.Encode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Cache.ReferenceTableFile.Encode*
  commentId: Overload:NetScape.Abstractions.Cache.ReferenceTableFile.Encode
  name: Encode
  nameWithType: ReferenceTableFile.Encode
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile.Encode
