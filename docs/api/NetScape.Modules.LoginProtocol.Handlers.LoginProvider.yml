### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginProvider
  commentId: T:NetScape.Modules.LoginProtocol.Handlers.LoginProvider
  id: LoginProvider
  parent: NetScape.Modules.LoginProtocol.Handlers
  children:
  - NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor(NetScape.Abstractions.Interfaces.ContainerProvider)
  - NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
  langs:
  - csharp
  - vb
  name: LoginProvider
  nameWithType: LoginProvider
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginProvider
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: LoginProvider
    path: src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
    startLine: 9
  assemblies:
  - NetScape.Modules.LoginProtocol
  namespace: NetScape.Modules.LoginProtocol.Handlers
  syntax:
    content: 'public class LoginProvider : ILoginProvider, IChannelHandlerProvider'
    content.vb: >-
      Public Class LoginProvider
          Implements ILoginProvider, IChannelHandlerProvider
  inheritance:
  - System.Object
  implements:
  - NetScape.Abstractions.Interfaces.Login.ILoginProvider
  - NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor(NetScape.Abstractions.Interfaces.ContainerProvider)
  commentId: M:NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor(NetScape.Abstractions.Interfaces.ContainerProvider)
  id: '#ctor(NetScape.Abstractions.Interfaces.ContainerProvider)'
  parent: NetScape.Modules.LoginProtocol.Handlers.LoginProvider
  langs:
  - csharp
  - vb
  name: LoginProvider(ContainerProvider)
  nameWithType: LoginProvider.LoginProvider(ContainerProvider)
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.LoginProvider(NetScape.Abstractions.Interfaces.ContainerProvider)
  type: Constructor
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: .ctor
    path: src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
    startLine: 13
  assemblies:
  - NetScape.Modules.LoginProtocol
  namespace: NetScape.Modules.LoginProtocol.Handlers
  syntax:
    content: public LoginProvider(ContainerProvider containerProvider)
    parameters:
    - id: containerProvider
      type: NetScape.Abstractions.Interfaces.ContainerProvider
    content.vb: Public Sub New(containerProvider As ContainerProvider)
  overload: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
  commentId: P:NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
  id: Provide
  parent: NetScape.Modules.LoginProtocol.Handlers.LoginProvider
  langs:
  - csharp
  - vb
  name: Provide
  nameWithType: LoginProvider.Provide
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Provide
    path: src/NetScape.Modules.LoginProtocol/Handlers/LoginProvider.cs
    startLine: 18
  assemblies:
  - NetScape.Modules.LoginProtocol
  namespace: NetScape.Modules.LoginProtocol.Handlers
  syntax:
    content: public Func<IChannelHandler[]> Provide { get; }
    parameters: []
    return:
      type: System.Func{DotNetty.Transport.Channels.IChannelHandler[]}
    content.vb: Public ReadOnly Property Provide As Func(Of IChannelHandler())
  overload: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide*
  implements:
  - NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider.Provide
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NetScape.Modules.LoginProtocol.Handlers
  commentId: N:NetScape.Modules.LoginProtocol.Handlers
  name: NetScape.Modules.LoginProtocol.Handlers
  nameWithType: NetScape.Modules.LoginProtocol.Handlers
  fullName: NetScape.Modules.LoginProtocol.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetScape.Abstractions.Interfaces.Login.ILoginProvider
  commentId: T:NetScape.Abstractions.Interfaces.Login.ILoginProvider
  parent: NetScape.Abstractions.Interfaces.Login
  name: ILoginProvider
  nameWithType: ILoginProvider
  fullName: NetScape.Abstractions.Interfaces.Login.ILoginProvider
- uid: NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider
  commentId: T:NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider
  parent: NetScape.Abstractions.Interfaces.IO
  name: IChannelHandlerProvider
  nameWithType: IChannelHandlerProvider
  fullName: NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Interfaces.Login
  commentId: N:NetScape.Abstractions.Interfaces.Login
  name: NetScape.Abstractions.Interfaces.Login
  nameWithType: NetScape.Abstractions.Interfaces.Login
  fullName: NetScape.Abstractions.Interfaces.Login
- uid: NetScape.Abstractions.Interfaces.IO
  commentId: N:NetScape.Abstractions.Interfaces.IO
  name: NetScape.Abstractions.Interfaces.IO
  nameWithType: NetScape.Abstractions.Interfaces.IO
  fullName: NetScape.Abstractions.Interfaces.IO
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor*
  commentId: Overload:NetScape.Modules.LoginProtocol.Handlers.LoginProvider.#ctor
  name: LoginProvider
  nameWithType: LoginProvider.LoginProvider
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.LoginProvider
- uid: NetScape.Abstractions.Interfaces.ContainerProvider
  commentId: T:NetScape.Abstractions.Interfaces.ContainerProvider
  parent: NetScape.Abstractions.Interfaces
  name: ContainerProvider
  nameWithType: ContainerProvider
  fullName: NetScape.Abstractions.Interfaces.ContainerProvider
- uid: NetScape.Abstractions.Interfaces
  commentId: N:NetScape.Abstractions.Interfaces
  name: NetScape.Abstractions.Interfaces
  nameWithType: NetScape.Abstractions.Interfaces
  fullName: NetScape.Abstractions.Interfaces
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide*
  commentId: Overload:NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
  name: Provide
  nameWithType: LoginProvider.Provide
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginProvider.Provide
- uid: NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider.Provide
  commentId: P:NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider.Provide
  parent: NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider
  name: Provide
  nameWithType: IChannelHandlerProvider.Provide
  fullName: NetScape.Abstractions.Interfaces.IO.IChannelHandlerProvider.Provide
- uid: System.Func{DotNetty.Transport.Channels.IChannelHandler[]}
  commentId: T:System.Func{DotNetty.Transport.Channels.IChannelHandler[]}
  parent: System
  definition: System.Func`1
  name: Func<IChannelHandler[]>
  nameWithType: Func<IChannelHandler[]>
  fullName: System.Func<DotNetty.Transport.Channels.IChannelHandler[]>
  nameWithType.vb: Func(Of IChannelHandler())
  fullName.vb: System.Func(Of DotNetty.Transport.Channels.IChannelHandler())
  name.vb: Func(Of IChannelHandler())
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetty.Transport.Channels.IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: DotNetty.Transport.Channels.IChannelHandler
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetty.Transport.Channels.IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: DotNetty.Transport.Channels.IChannelHandler
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
