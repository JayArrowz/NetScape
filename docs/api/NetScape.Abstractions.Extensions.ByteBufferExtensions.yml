### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions
  commentId: T:NetScape.Abstractions.Extensions.ByteBufferExtensions
  id: ByteBufferExtensions
  parent: NetScape.Abstractions.Extensions
  children:
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip(DotNetty.Buffers.IByteBuffer)
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[])
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip(DotNetty.Buffers.IByteBuffer)
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes(DotNetty.Buffers.IByteBuffer)
  - NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString(DotNetty.Buffers.IByteBuffer)
  langs:
  - csharp
  - vb
  name: ByteBufferExtensions
  nameWithType: ByteBufferExtensions
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ByteBufferExtensions
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 7
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static class ByteBufferExtensions
    content.vb: Public Module ByteBufferExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString(DotNetty.Buffers.IByteBuffer)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString(DotNetty.Buffers.IByteBuffer)
  id: ReadString(DotNetty.Buffers.IByteBuffer)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: ReadString(IByteBuffer)
  nameWithType: ByteBufferExtensions.ReadString(IByteBuffer)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString(DotNetty.Buffers.IByteBuffer)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ReadString
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 9
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static string ReadString(this IByteBuffer buffer)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadString(buffer As IByteBuffer) As String
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip(DotNetty.Buffers.IByteBuffer)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip(DotNetty.Buffers.IByteBuffer)
  id: CompressGzip(DotNetty.Buffers.IByteBuffer)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: CompressGzip(IByteBuffer)
  nameWithType: ByteBufferExtensions.CompressGzip(IByteBuffer)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip(DotNetty.Buffers.IByteBuffer)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: CompressGzip
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 20
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static IByteBuffer CompressGzip(this IByteBuffer buffer)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    return:
      type: DotNetty.Buffers.IByteBuffer
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CompressGzip(buffer As IByteBuffer) As IByteBuffer
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes(DotNetty.Buffers.IByteBuffer)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes(DotNetty.Buffers.IByteBuffer)
  id: GetBytes(DotNetty.Buffers.IByteBuffer)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: GetBytes(IByteBuffer)
  nameWithType: ByteBufferExtensions.GetBytes(IByteBuffer)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes(DotNetty.Buffers.IByteBuffer)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetBytes
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 32
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static byte[] GetBytes(this IByteBuffer buffer)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBytes(buffer As IByteBuffer) As Byte()
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip(DotNetty.Buffers.IByteBuffer)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip(DotNetty.Buffers.IByteBuffer)
  id: DecompressGzip(DotNetty.Buffers.IByteBuffer)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: DecompressGzip(IByteBuffer)
  nameWithType: ByteBufferExtensions.DecompressGzip(IByteBuffer)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip(DotNetty.Buffers.IByteBuffer)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: DecompressGzip
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 40
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static IByteBuffer DecompressGzip(this IByteBuffer buffer)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    return:
      type: DotNetty.Buffers.IByteBuffer
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DecompressGzip(buffer As IByteBuffer) As IByteBuffer
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[])
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[])
  id: DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[])
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: DecodeXtea(IByteBuffer, UInt32[])
  nameWithType: ByteBufferExtensions.DecodeXtea(IByteBuffer, UInt32[])
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32[])
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: DecodeXtea
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 52
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static void DecodeXtea(this IByteBuffer buffer, uint[] keys)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    - id: keys
      type: System.UInt32[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub DecodeXtea(buffer As IByteBuffer, keys As UInteger())
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea*
  nameWithType.vb: ByteBufferExtensions.DecodeXtea(IByteBuffer, UInt32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32())
  name.vb: DecodeXtea(IByteBuffer, UInt32())
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  id: DecodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: DecodeXtea(IByteBuffer, UInt32[], Int32, Int32)
  nameWithType: ByteBufferExtensions.DecodeXtea(IByteBuffer, UInt32[], Int32, Int32)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: DecodeXtea
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 57
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static void DecodeXtea(this IByteBuffer buffer, uint[] keys, int start, int end)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    - id: keys
      type: System.UInt32[]
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub DecodeXtea(buffer As IByteBuffer, keys As UInteger(), start As Integer, end As Integer)
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea*
  nameWithType.vb: ByteBufferExtensions.DecodeXtea(IByteBuffer, UInt32(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32(), System.Int32, System.Int32)
  name.vb: DecodeXtea(IByteBuffer, UInt32(), Int32, Int32)
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  commentId: M:NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  id: EncodeXtea(DotNetty.Buffers.IByteBuffer,System.UInt32[],System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NetScape.Abstractions.Extensions.ByteBufferExtensions
  langs:
  - csharp
  - vb
  name: EncodeXtea(IByteBuffer, UInt32[], Int32, Int32)
  nameWithType: ByteBufferExtensions.EncodeXtea(IByteBuffer, UInt32[], Int32, Int32)
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: EncodeXtea
    path: src/NetScape.Abstractions/Extensions/ByteBufferExtensions.cs
    startLine: 82
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static void EncodeXtea(this IByteBuffer buffer, uint[] keys, int start, int end)
    parameters:
    - id: buffer
      type: DotNetty.Buffers.IByteBuffer
    - id: keys
      type: System.UInt32[]
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub EncodeXtea(buffer As IByteBuffer, keys As UInteger(), start As Integer, end As Integer)
  overload: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea*
  nameWithType.vb: ByteBufferExtensions.EncodeXtea(IByteBuffer, UInt32(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea(DotNetty.Buffers.IByteBuffer, System.UInt32(), System.Int32, System.Int32)
  name.vb: EncodeXtea(IByteBuffer, UInt32(), Int32, Int32)
references:
- uid: NetScape.Abstractions.Extensions
  commentId: N:NetScape.Abstractions.Extensions
  name: NetScape.Abstractions.Extensions
  nameWithType: NetScape.Abstractions.Extensions
  fullName: NetScape.Abstractions.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString
  name: ReadString
  nameWithType: ByteBufferExtensions.ReadString
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.ReadString
- uid: DotNetty.Buffers.IByteBuffer
  commentId: T:DotNetty.Buffers.IByteBuffer
  parent: DotNetty.Buffers
  isExternal: true
  name: IByteBuffer
  nameWithType: IByteBuffer
  fullName: DotNetty.Buffers.IByteBuffer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetty.Buffers
  commentId: N:DotNetty.Buffers
  isExternal: true
  name: DotNetty.Buffers
  nameWithType: DotNetty.Buffers
  fullName: DotNetty.Buffers
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip
  name: CompressGzip
  nameWithType: ByteBufferExtensions.CompressGzip
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.CompressGzip
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes
  name: GetBytes
  nameWithType: ByteBufferExtensions.GetBytes
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.GetBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip
  name: DecompressGzip
  nameWithType: ByteBufferExtensions.DecompressGzip
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecompressGzip
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea
  name: DecodeXtea
  nameWithType: ByteBufferExtensions.DecodeXtea
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.DecodeXtea
- uid: System.UInt32[]
  isExternal: true
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea*
  commentId: Overload:NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea
  name: EncodeXtea
  nameWithType: ByteBufferExtensions.EncodeXtea
  fullName: NetScape.Abstractions.Extensions.ByteBufferExtensions.EncodeXtea
