### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  commentId: T:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  id: BaseLoopGroupFactory
  parent: NetScape.Modules.Server.IO.EventLoop
  children:
  - NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor
  - NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  - NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: BaseLoopGroupFactory
    path: src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 14
  assemblies:
  - NetScape.Modules.Server
  namespace: NetScape.Modules.Server.IO.EventLoop
  summary: "\nThe <xref href=\"NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory\" data-throw-if-not-resolved=\"false\"></xref> class keeps references of event loop groups that are created\nand holds them from disposing\n"
  example: []
  syntax:
    content: 'public class BaseLoopGroupFactory : IDisposable'
    content.vb: >-
      Public Class BaseLoopGroupFactory
          Implements IDisposable
  seealso:
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - NetScape.Modules.Server.IO.EventLoop.GameServerEventLoopGroupFactory
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor
  commentId: M:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor
  id: '#ctor'
  parent: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: BaseLoopGroupFactory()
  nameWithType: BaseLoopGroupFactory.BaseLoopGroupFactory()
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.BaseLoopGroupFactory()
  type: Constructor
  source:
    remote:
      path: docfx_project/src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: .ctor
    path: src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 31
  assemblies:
  - NetScape.Modules.Server
  namespace: NetScape.Modules.Server.IO.EventLoop
  summary: Initializes a new instance of the <xref href="NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BaseLoopGroupFactory()
    content.vb: Public Sub New
  overload: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(System.Nullable{System.Int32})
  commentId: M:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(System.Nullable{System.Int32})
  id: GetOrCreateSocketIoEventLoopGroup(System.Nullable{System.Int32})
  parent: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: GetOrCreateSocketIoEventLoopGroup(Nullable<Int32>)
  nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(Nullable<Int32>)
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetOrCreateSocketIoEventLoopGroup
    path: src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 51
  assemblies:
  - NetScape.Modules.Server
  namespace: NetScape.Modules.Server.IO.EventLoop
  syntax:
    content: public IEventLoopGroup GetOrCreateSocketIoEventLoopGroup(int? nEventLoop = default(int? ))
    parameters:
    - id: nEventLoop
      type: System.Nullable{System.Int32}
    return:
      type: DotNetty.Transport.Channels.IEventLoopGroup
    content.vb: Public Function GetOrCreateSocketIoEventLoopGroup(nEventLoop As Integer? = Nothing) As IEventLoopGroup
  overload: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup*
  nameWithType.vb: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup(System.Nullable(Of System.Int32))
  name.vb: GetOrCreateSocketIoEventLoopGroup(Nullable(Of Int32))
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  commentId: M:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BaseLoopGroupFactory.Dispose(Boolean)
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Dispose
    path: src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 56
  assemblies:
  - NetScape.Modules.Server
  namespace: NetScape.Modules.Server.IO.EventLoop
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose
  commentId: M:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose
  id: Dispose
  parent: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseLoopGroupFactory.Dispose()
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Dispose
    path: src/NetScape.GameServer/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 73
  assemblies:
  - NetScape.Modules.Server
  namespace: NetScape.Modules.Server.IO.EventLoop
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  commentId: T:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
  parent: NetScape.Modules.Server.IO.EventLoop
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NetScape.Modules.Server.IO.EventLoop
  commentId: N:NetScape.Modules.Server.IO.EventLoop
  name: NetScape.Modules.Server.IO.EventLoop
  nameWithType: NetScape.Modules.Server.IO.EventLoop
  fullName: NetScape.Modules.Server.IO.EventLoop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor*
  commentId: Overload:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.#ctor
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory.BaseLoopGroupFactory
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.BaseLoopGroupFactory
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup*
  commentId: Overload:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  name: GetOrCreateSocketIoEventLoopGroup
  nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IEventLoopGroup
  commentId: T:DotNetty.Transport.Channels.IEventLoopGroup
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IEventLoopGroup
  nameWithType: IEventLoopGroup
  fullName: DotNetty.Transport.Channels.IEventLoopGroup
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  commentId: Overload:NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose
  name: Dispose
  nameWithType: BaseLoopGroupFactory.Dispose
  fullName: NetScape.Modules.Server.IO.EventLoop.BaseLoopGroupFactory.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
