### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1
  commentId: T:NetScape.Abstractions.Model.Login.LoginResponse`1
  id: LoginResponse`1
  parent: NetScape.Abstractions.Model.Login
  children:
  - NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged
  - NetScape.Abstractions.Model.Login.LoginResponse`1.Rights
  - NetScape.Abstractions.Model.Login.LoginResponse`1.Status
  langs:
  - csharp
  - vb
  name: LoginResponse<TStatus>
  nameWithType: LoginResponse<TStatus>
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Model/Login/LoginResponse.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: LoginResponse
    path: src/NetScape.Abstractions/Model/Login/LoginResponse.cs
    startLine: 7
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Model.Login
  example: []
  syntax:
    content: public class LoginResponse<TStatus>
    typeParameters:
    - id: TStatus
    content.vb: Public Class LoginResponse(Of TStatus)
  inheritance:
  - System.Object
  derivedClasses:
  - NetScape.Modules.LoginProtocol.Rs2LoginResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: LoginResponse(Of TStatus)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus)
  name.vb: LoginResponse(Of TStatus)
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged
  commentId: P:NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged
  id: Flagged
  parent: NetScape.Abstractions.Model.Login.LoginResponse`1
  langs:
  - csharp
  - vb
  name: Flagged
  nameWithType: LoginResponse<TStatus>.Flagged
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Flagged
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Model/Login/LoginResponse.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Flagged
    path: src/NetScape.Abstractions/Model/Login/LoginResponse.cs
    startLine: 13
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Model.Login
  example: []
  syntax:
    content: public bool Flagged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Flagged As Boolean
  overload: NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged*
  nameWithType.vb: LoginResponse(Of TStatus).Flagged
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Flagged
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Rights
  commentId: P:NetScape.Abstractions.Model.Login.LoginResponse`1.Rights
  id: Rights
  parent: NetScape.Abstractions.Model.Login.LoginResponse`1
  langs:
  - csharp
  - vb
  name: Rights
  nameWithType: LoginResponse<TStatus>.Rights
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Rights
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Model/Login/LoginResponse.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Rights
    path: src/NetScape.Abstractions/Model/Login/LoginResponse.cs
    startLine: 18
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Model.Login
  example: []
  syntax:
    content: public int Rights { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Rights As Integer
  overload: NetScape.Abstractions.Model.Login.LoginResponse`1.Rights*
  nameWithType.vb: LoginResponse(Of TStatus).Rights
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Rights
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Status
  commentId: P:NetScape.Abstractions.Model.Login.LoginResponse`1.Status
  id: Status
  parent: NetScape.Abstractions.Model.Login.LoginResponse`1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: LoginResponse<TStatus>.Status
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Status
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Model/Login/LoginResponse.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Status
    path: src/NetScape.Abstractions/Model/Login/LoginResponse.cs
    startLine: 23
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Model.Login
  example: []
  syntax:
    content: public TStatus Status { get; set; }
    parameters: []
    return:
      type: '{TStatus}'
    content.vb: Public Property Status As TStatus
  overload: NetScape.Abstractions.Model.Login.LoginResponse`1.Status*
  nameWithType.vb: LoginResponse(Of TStatus).Status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Status
references:
- uid: NetScape.Abstractions.Model.Login
  commentId: N:NetScape.Abstractions.Model.Login
  name: NetScape.Abstractions.Model.Login
  nameWithType: NetScape.Abstractions.Model.Login
  fullName: NetScape.Abstractions.Model.Login
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged*
  commentId: Overload:NetScape.Abstractions.Model.Login.LoginResponse`1.Flagged
  name: Flagged
  nameWithType: LoginResponse<TStatus>.Flagged
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Flagged
  nameWithType.vb: LoginResponse(Of TStatus).Flagged
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Flagged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Rights*
  commentId: Overload:NetScape.Abstractions.Model.Login.LoginResponse`1.Rights
  name: Rights
  nameWithType: LoginResponse<TStatus>.Rights
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Rights
  nameWithType.vb: LoginResponse(Of TStatus).Rights
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Rights
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1.Status*
  commentId: Overload:NetScape.Abstractions.Model.Login.LoginResponse`1.Status
  name: Status
  nameWithType: LoginResponse<TStatus>.Status
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>.Status
  nameWithType.vb: LoginResponse(Of TStatus).Status
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus).Status
- uid: '{TStatus}'
  commentId: '!:TStatus'
  definition: TStatus
  name: TStatus
  nameWithType: TStatus
  fullName: TStatus
- uid: TStatus
  commentId: '!:TStatus'
  name: TStatus
  nameWithType: TStatus
  fullName: TStatus
