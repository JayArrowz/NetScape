### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase
  commentId: T:NetScape.Modules.Cache.ReferenceTableCacheBase
  id: ReferenceTableCacheBase
  parent: NetScape.Modules.Cache
  children:
  - NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
  - NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose
  - NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables
  - NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  - NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  - NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable(NetScape.Abstractions.Cache.CacheIndex,System.Boolean)
  - NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  langs:
  - csharp
  - vb
  name: ReferenceTableCacheBase
  nameWithType: ReferenceTableCacheBase
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: ReferenceTableCacheBase
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 10
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  summary: "\nA cache that stores information on its files in reference tables in index 255.\n"
  example: []
  syntax:
    content: 'public abstract class ReferenceTableCacheBase : CacheBase, IDisposable'
    content.vb: >-
      Public MustInherit Class ReferenceTableCacheBase
          Inherits CacheBase
          Implements IDisposable
  inheritance:
  - System.Object
  - NetScape.Modules.Cache.CacheBase
  derivedClasses:
  - NetScape.Modules.Cache.RuneTek5.RuneTek5Cache
  implements:
  - System.IDisposable
  inheritedMembers:
  - NetScape.Modules.Cache.CacheBase.GetIndexes
  - NetScape.Modules.Cache.CacheBase.GetFile``1(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  - NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
  - NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
  - NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  - NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex,System.Int32,NetScape.Modules.Cache.CacheBase)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
  commentId: P:NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
  id: CachedReferenceTables
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: CachedReferenceTables
  nameWithType: ReferenceTableCacheBase.CachedReferenceTables
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: CachedReferenceTables
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 12
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: public ConcurrentDictionary<CacheIndex, ReferenceTableFile> CachedReferenceTables { get; set; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Abstractions.Cache.ReferenceTableFile}
    content.vb: Public Property CachedReferenceTables As ConcurrentDictionary(Of CacheIndex, ReferenceTableFile)
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable(NetScape.Abstractions.Cache.CacheIndex,System.Boolean)
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable(NetScape.Abstractions.Cache.CacheIndex,System.Boolean)
  id: GetReferenceTable(NetScape.Abstractions.Cache.CacheIndex,System.Boolean)
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: GetReferenceTable(CacheIndex, Boolean)
  nameWithType: ReferenceTableCacheBase.GetReferenceTable(CacheIndex, Boolean)
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable(NetScape.Abstractions.Cache.CacheIndex, System.Boolean)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetReferenceTable
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 17
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: public ReferenceTableFile GetReferenceTable(CacheIndex index, bool createIfNotFound = false)
    parameters:
    - id: index
      type: NetScape.Abstractions.Cache.CacheIndex
    - id: createIfNotFound
      type: System.Boolean
    return:
      type: NetScape.Abstractions.Cache.ReferenceTableFile
    content.vb: Public Function GetReferenceTable(index As CacheIndex, createIfNotFound As Boolean = False) As ReferenceTableFile
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  id: GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: GetFileInfo(CacheIndex, Int32)
  nameWithType: ReferenceTableCacheBase.GetFileInfo(CacheIndex, Int32)
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex, System.Int32)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetFileInfo
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 40
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: public override sealed CacheFileInfo GetFileInfo(CacheIndex index, int fileId)
    parameters:
    - id: index
      type: NetScape.Abstractions.Cache.CacheIndex
    - id: fileId
      type: System.Int32
    return:
      type: NetScape.Abstractions.Cache.CacheFileInfo
    content.vb: Public NotOverridable Overrides Function GetFileInfo(index As CacheIndex, fileId As Integer) As CacheFileInfo
  overridden: NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo*
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  id: PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: PutFileInfo(CacheFileInfo)
  nameWithType: ReferenceTableCacheBase.PutFileInfo(CacheFileInfo)
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: PutFileInfo
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 55
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: protected override sealed void PutFileInfo(CacheFileInfo fileInfo)
    parameters:
    - id: fileInfo
      type: NetScape.Abstractions.Cache.CacheFileInfo
    content.vb: Protected NotOverridable Overrides Sub PutFileInfo(fileInfo As CacheFileInfo)
  overridden: NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo*
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  id: GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: GetFileIds(CacheIndex)
  nameWithType: ReferenceTableCacheBase.GetFileIds(CacheIndex)
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GetFileIds
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 65
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: public override sealed IEnumerable<int> GetFileIds(CacheIndex index)
    parameters:
    - id: index
      type: NetScape.Abstractions.Cache.CacheIndex
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public NotOverridable Overrides Function GetFileIds(index As CacheIndex) As IEnumerable(Of Integer)
  overridden: NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds*
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables
  id: FlushCachedReferenceTables
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: FlushCachedReferenceTables()
  nameWithType: ReferenceTableCacheBase.FlushCachedReferenceTables()
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FlushCachedReferenceTables
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 73
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  summary: "\nWrites changes made to the locally cached reference tables and clears the local cache.\n"
  example: []
  syntax:
    content: public void FlushCachedReferenceTables()
    content.vb: Public Sub FlushCachedReferenceTables
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose
  commentId: M:NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose
  id: Dispose
  parent: NetScape.Modules.Cache.ReferenceTableCacheBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ReferenceTableCacheBase.Dispose()
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Dispose
    path: src/NetScape.Modules.Cache/ReferenceTableCacheBase.cs
    startLine: 84
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: NetScape.Modules.Cache.CacheBase.Dispose
  overload: NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NetScape.Modules.Cache
  commentId: N:NetScape.Modules.Cache
  name: NetScape.Modules.Cache
  nameWithType: NetScape.Modules.Cache
  fullName: NetScape.Modules.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetScape.Modules.Cache.CacheBase
  commentId: T:NetScape.Modules.Cache.CacheBase
  parent: NetScape.Modules.Cache
  name: CacheBase
  nameWithType: CacheBase
  fullName: NetScape.Modules.Cache.CacheBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NetScape.Modules.Cache.CacheBase.GetIndexes
  commentId: M:NetScape.Modules.Cache.CacheBase.GetIndexes
  parent: NetScape.Modules.Cache.CacheBase
  name: GetIndexes()
  nameWithType: CacheBase.GetIndexes()
  fullName: NetScape.Modules.Cache.CacheBase.GetIndexes()
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.GetIndexes
    name: GetIndexes
    nameWithType: CacheBase.GetIndexes
    fullName: NetScape.Modules.Cache.CacheBase.GetIndexes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.GetIndexes
    name: GetIndexes
    nameWithType: CacheBase.GetIndexes
    fullName: NetScape.Modules.Cache.CacheBase.GetIndexes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.CacheBase.GetFile``1(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  commentId: M:NetScape.Modules.Cache.CacheBase.GetFile``1(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  parent: NetScape.Modules.Cache.CacheBase
  isExternal: true
  name: GetFile<T>(CacheIndex, Int32)
  nameWithType: CacheBase.GetFile<T>(CacheIndex, Int32)
  fullName: NetScape.Modules.Cache.CacheBase.GetFile<T>(NetScape.Abstractions.Cache.CacheIndex, System.Int32)
  nameWithType.vb: CacheBase.GetFile(Of T)(CacheIndex, Int32)
  fullName.vb: NetScape.Modules.Cache.CacheBase.GetFile(Of T)(NetScape.Abstractions.Cache.CacheIndex, System.Int32)
  name.vb: GetFile(Of T)(CacheIndex, Int32)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.GetFile``1(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
    name: GetFile<T>
    nameWithType: CacheBase.GetFile<T>
    fullName: NetScape.Modules.Cache.CacheBase.GetFile<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.GetFile``1(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
    name: GetFile(Of T)
    nameWithType: CacheBase.GetFile(Of T)
    fullName: NetScape.Modules.Cache.CacheBase.GetFile(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
  commentId: M:NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
  parent: NetScape.Modules.Cache.CacheBase
  name: GetBinaryFile(CacheFileInfo)
  nameWithType: CacheBase.GetBinaryFile(CacheFileInfo)
  fullName: NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
    name: GetBinaryFile
    nameWithType: CacheBase.GetBinaryFile
    fullName: NetScape.Modules.Cache.CacheBase.GetBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileInfo
    name: CacheFileInfo
    nameWithType: CacheFileInfo
    fullName: NetScape.Abstractions.Cache.CacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.GetBinaryFile(NetScape.Abstractions.Cache.CacheFileInfo)
    name: GetBinaryFile
    nameWithType: CacheBase.GetBinaryFile
    fullName: NetScape.Modules.Cache.CacheBase.GetBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileInfo
    name: CacheFileInfo
    nameWithType: CacheFileInfo
    fullName: NetScape.Abstractions.Cache.CacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
  commentId: M:NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
  parent: NetScape.Modules.Cache.CacheBase
  name: PutFile(CacheFileBase)
  nameWithType: CacheBase.PutFile(CacheFileBase)
  fullName: NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
    name: PutFile
    nameWithType: CacheBase.PutFile
    fullName: NetScape.Modules.Cache.CacheBase.PutFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileBase
    name: CacheFileBase
    nameWithType: CacheFileBase
    fullName: NetScape.Abstractions.Cache.CacheFileBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.PutFile(NetScape.Abstractions.Cache.CacheFileBase)
    name: PutFile
    nameWithType: CacheBase.PutFile
    fullName: NetScape.Modules.Cache.CacheBase.PutFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileBase
    name: CacheFileBase
    nameWithType: CacheFileBase
    fullName: NetScape.Abstractions.Cache.CacheFileBase
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  commentId: M:NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  parent: NetScape.Modules.Cache.CacheBase
  name: PutBinaryFile(BinaryFile)
  nameWithType: CacheBase.PutBinaryFile(BinaryFile)
  fullName: NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: PutBinaryFile
    nameWithType: CacheBase.PutBinaryFile
    fullName: NetScape.Modules.Cache.CacheBase.PutBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.PutBinaryFile(NetScape.Abstractions.Cache.BinaryFile)
    name: PutBinaryFile
    nameWithType: CacheBase.PutBinaryFile
    fullName: NetScape.Modules.Cache.CacheBase.PutBinaryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.BinaryFile
    name: BinaryFile
    nameWithType: BinaryFile
    fullName: NetScape.Abstractions.Cache.BinaryFile
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex,System.Int32,NetScape.Modules.Cache.CacheBase)
  commentId: M:NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex,System.Int32,NetScape.Modules.Cache.CacheBase)
  parent: NetScape.Modules.Cache.CacheBase
  isExternal: true
  name: CopyFile(CacheIndex, Int32, CacheBase)
  nameWithType: CacheBase.CopyFile(CacheIndex, Int32, CacheBase)
  fullName: NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex, System.Int32, NetScape.Modules.Cache.CacheBase)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex,System.Int32,NetScape.Modules.Cache.CacheBase)
    name: CopyFile
    nameWithType: CacheBase.CopyFile
    fullName: NetScape.Modules.Cache.CacheBase.CopyFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Modules.Cache.CacheBase
    name: CacheBase
    nameWithType: CacheBase
    fullName: NetScape.Modules.Cache.CacheBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.CopyFile(NetScape.Abstractions.Cache.CacheIndex,System.Int32,NetScape.Modules.Cache.CacheBase)
    name: CopyFile
    nameWithType: CacheBase.CopyFile
    fullName: NetScape.Modules.Cache.CacheBase.CopyFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Modules.Cache.CacheBase
    name: CacheBase
    nameWithType: CacheBase
    fullName: NetScape.Modules.Cache.CacheBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
  name: CachedReferenceTables
  nameWithType: ReferenceTableCacheBase.CachedReferenceTables
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.CachedReferenceTables
- uid: System.Collections.Concurrent.ConcurrentDictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Abstractions.Cache.ReferenceTableFile}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{NetScape.Abstractions.Cache.CacheIndex,NetScape.Abstractions.Cache.ReferenceTableFile}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<CacheIndex, ReferenceTableFile>
  nameWithType: ConcurrentDictionary<CacheIndex, ReferenceTableFile>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<NetScape.Abstractions.Cache.CacheIndex, NetScape.Abstractions.Cache.ReferenceTableFile>
  nameWithType.vb: ConcurrentDictionary(Of CacheIndex, ReferenceTableFile)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of NetScape.Abstractions.Cache.CacheIndex, NetScape.Abstractions.Cache.ReferenceTableFile)
  name.vb: ConcurrentDictionary(Of CacheIndex, ReferenceTableFile)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Abstractions.Cache.ReferenceTableFile
    name: ReferenceTableFile
    nameWithType: ReferenceTableFile
    fullName: NetScape.Abstractions.Cache.ReferenceTableFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Abstractions.Cache.ReferenceTableFile
    name: ReferenceTableFile
    nameWithType: ReferenceTableFile
    fullName: NetScape.Abstractions.Cache.ReferenceTableFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable
  name: GetReferenceTable
  nameWithType: ReferenceTableCacheBase.GetReferenceTable
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetReferenceTable
- uid: NetScape.Abstractions.Cache.CacheIndex
  commentId: T:NetScape.Abstractions.Cache.CacheIndex
  parent: NetScape.Abstractions.Cache
  name: CacheIndex
  nameWithType: CacheIndex
  fullName: NetScape.Abstractions.Cache.CacheIndex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NetScape.Abstractions.Cache.ReferenceTableFile
  commentId: T:NetScape.Abstractions.Cache.ReferenceTableFile
  parent: NetScape.Abstractions.Cache
  name: ReferenceTableFile
  nameWithType: ReferenceTableFile
  fullName: NetScape.Abstractions.Cache.ReferenceTableFile
- uid: NetScape.Abstractions.Cache
  commentId: N:NetScape.Abstractions.Cache
  name: NetScape.Abstractions.Cache
  nameWithType: NetScape.Abstractions.Cache
  fullName: NetScape.Abstractions.Cache
- uid: NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  commentId: M:NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
  parent: NetScape.Modules.Cache.CacheBase
  isExternal: true
  name: GetFileInfo(CacheIndex, Int32)
  nameWithType: CacheBase.GetFileInfo(CacheIndex, Int32)
  fullName: NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex, System.Int32)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
    name: GetFileInfo
    nameWithType: CacheBase.GetFileInfo
    fullName: NetScape.Modules.Cache.CacheBase.GetFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.GetFileInfo(NetScape.Abstractions.Cache.CacheIndex,System.Int32)
    name: GetFileInfo
    nameWithType: CacheBase.GetFileInfo
    fullName: NetScape.Modules.Cache.CacheBase.GetFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo
  name: GetFileInfo
  nameWithType: ReferenceTableCacheBase.GetFileInfo
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Abstractions.Cache.CacheFileInfo
  commentId: T:NetScape.Abstractions.Cache.CacheFileInfo
  parent: NetScape.Abstractions.Cache
  name: CacheFileInfo
  nameWithType: CacheFileInfo
  fullName: NetScape.Abstractions.Cache.CacheFileInfo
- uid: NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  commentId: M:NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  parent: NetScape.Modules.Cache.CacheBase
  name: PutFileInfo(CacheFileInfo)
  nameWithType: CacheBase.PutFileInfo(CacheFileInfo)
  fullName: NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
    name: PutFileInfo
    nameWithType: CacheBase.PutFileInfo
    fullName: NetScape.Modules.Cache.CacheBase.PutFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileInfo
    name: CacheFileInfo
    nameWithType: CacheFileInfo
    fullName: NetScape.Abstractions.Cache.CacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.PutFileInfo(NetScape.Abstractions.Cache.CacheFileInfo)
    name: PutFileInfo
    nameWithType: CacheBase.PutFileInfo
    fullName: NetScape.Modules.Cache.CacheBase.PutFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheFileInfo
    name: CacheFileInfo
    nameWithType: CacheFileInfo
    fullName: NetScape.Abstractions.Cache.CacheFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo
  name: PutFileInfo
  nameWithType: ReferenceTableCacheBase.PutFileInfo
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.PutFileInfo
- uid: NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  commentId: M:NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  parent: NetScape.Modules.Cache.CacheBase
  name: GetFileIds(CacheIndex)
  nameWithType: CacheBase.GetFileIds(CacheIndex)
  fullName: NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
    name: GetFileIds
    nameWithType: CacheBase.GetFileIds
    fullName: NetScape.Modules.Cache.CacheBase.GetFileIds
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.GetFileIds(NetScape.Abstractions.Cache.CacheIndex)
    name: GetFileIds
    nameWithType: CacheBase.GetFileIds
    fullName: NetScape.Modules.Cache.CacheBase.GetFileIds
  - name: (
    nameWithType: (
    fullName: (
  - uid: NetScape.Abstractions.Cache.CacheIndex
    name: CacheIndex
    nameWithType: CacheIndex
    fullName: NetScape.Abstractions.Cache.CacheIndex
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds
  name: GetFileIds
  nameWithType: ReferenceTableCacheBase.GetFileIds
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.GetFileIds
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables
  name: FlushCachedReferenceTables
  nameWithType: ReferenceTableCacheBase.FlushCachedReferenceTables
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.FlushCachedReferenceTables
- uid: NetScape.Modules.Cache.CacheBase.Dispose
  commentId: M:NetScape.Modules.Cache.CacheBase.Dispose
  parent: NetScape.Modules.Cache.CacheBase
  name: Dispose()
  nameWithType: CacheBase.Dispose()
  fullName: NetScape.Modules.Cache.CacheBase.Dispose()
  spec.csharp:
  - uid: NetScape.Modules.Cache.CacheBase.Dispose
    name: Dispose
    nameWithType: CacheBase.Dispose
    fullName: NetScape.Modules.Cache.CacheBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NetScape.Modules.Cache.CacheBase.Dispose
    name: Dispose
    nameWithType: CacheBase.Dispose
    fullName: NetScape.Modules.Cache.CacheBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose*
  commentId: Overload:NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose
  name: Dispose
  nameWithType: ReferenceTableCacheBase.Dispose
  fullName: NetScape.Modules.Cache.ReferenceTableCacheBase.Dispose
