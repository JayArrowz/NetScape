### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder
  commentId: T:NetScape.Modules.LoginProtocol.Handlers.LoginEncoder
  id: LoginEncoder
  parent: NetScape.Modules.LoginProtocol.Handlers
  children:
  - NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  langs:
  - csharp
  - vb
  name: LoginEncoder
  nameWithType: LoginEncoder
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.LoginProtocol/Handlers/LoginEncoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: LoginEncoder
    path: src/NetScape.Modules.LoginProtocol/Handlers/LoginEncoder.cs
    startLine: 7
  assemblies:
  - NetScape.Modules.LoginProtocol
  namespace: NetScape.Modules.LoginProtocol.Handlers
  syntax:
    content: 'public class LoginEncoder : MessageToByteEncoder<LoginResponse<LoginStatus>>, IChannelHandler'
    content.vb: >-
      Public Class LoginEncoder
          Inherits MessageToByteEncoder(Of LoginResponse(Of LoginStatus))
          Implements IChannelHandler
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.ChannelHandlerAdapter
  - DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  implements:
  - DotNetty.Transport.Channels.IChannelHandler
  inheritedMembers:
  - DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AcceptOutboundMessage(System.Object)
  - DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  commentId: M:NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  id: Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  parent: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder
  langs:
  - csharp
  - vb
  name: Encode(IChannelHandlerContext, LoginResponse<LoginStatus>, IByteBuffer)
  nameWithType: LoginEncoder.Encode(IChannelHandlerContext, LoginResponse<LoginStatus>, IByteBuffer)
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode(DotNetty.Transport.Channels.IChannelHandlerContext, NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>, DotNetty.Buffers.IByteBuffer)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.LoginProtocol/Handlers/LoginEncoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Encode
    path: src/NetScape.Modules.LoginProtocol/Handlers/LoginEncoder.cs
    startLine: 9
  assemblies:
  - NetScape.Modules.LoginProtocol
  namespace: NetScape.Modules.LoginProtocol.Handlers
  syntax:
    content: protected override void Encode(IChannelHandlerContext context, LoginResponse<LoginStatus> message, IByteBuffer output)
    parameters:
    - id: context
      type: DotNetty.Transport.Channels.IChannelHandlerContext
    - id: message
      type: NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}
    - id: output
      type: DotNetty.Buffers.IByteBuffer
    content.vb: Protected Overrides Sub Encode(context As IChannelHandlerContext, message As LoginResponse(Of LoginStatus), output As IByteBuffer)
  overridden: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  overload: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode*
  nameWithType.vb: LoginEncoder.Encode(IChannelHandlerContext, LoginResponse(Of LoginStatus), IByteBuffer)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode(DotNetty.Transport.Channels.IChannelHandlerContext, NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus), DotNetty.Buffers.IByteBuffer)
  name.vb: Encode(IChannelHandlerContext, LoginResponse(Of LoginStatus), IByteBuffer)
references:
- uid: NetScape.Modules.LoginProtocol.Handlers
  commentId: N:NetScape.Modules.LoginProtocol.Handlers
  name: NetScape.Modules.LoginProtocol.Handlers
  nameWithType: NetScape.Modules.LoginProtocol.Handlers
  fullName: NetScape.Modules.LoginProtocol.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter
  commentId: T:DotNetty.Transport.Channels.ChannelHandlerAdapter
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelHandlerAdapter
  nameWithType: ChannelHandlerAdapter
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter
- uid: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  commentId: T:DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  parent: DotNetty.Codecs
  definition: DotNetty.Codecs.MessageToByteEncoder`1
  name: MessageToByteEncoder<LoginResponse<LoginStatus>>
  nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>
  fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>
  nameWithType.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus))
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus))
  name.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus))
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1
    name: MessageToByteEncoder
    nameWithType: MessageToByteEncoder
    fullName: DotNetty.Codecs.MessageToByteEncoder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1
    name: MessageToByteEncoder
    nameWithType: MessageToByteEncoder
    fullName: DotNetty.Codecs.MessageToByteEncoder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IChannelHandler
  commentId: T:DotNetty.Transport.Channels.IChannelHandler
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandler
  nameWithType: IChannelHandler
  fullName: DotNetty.Transport.Channels.IChannelHandler
- uid: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AcceptOutboundMessage(System.Object)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AcceptOutboundMessage(System.Object)
  parent: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  definition: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
  name: AcceptOutboundMessage(Object)
  nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.AcceptOutboundMessage(Object)
  fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.AcceptOutboundMessage(System.Object)
  nameWithType.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).AcceptOutboundMessage(Object)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).AcceptOutboundMessage(System.Object)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
    name: AcceptOutboundMessage
    nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.AcceptOutboundMessage
    fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.AcceptOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
    name: AcceptOutboundMessage
    nameWithType: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).AcceptOutboundMessage
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).AcceptOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  definition: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  nameWithType.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).WriteAsync(IChannelHandlerContext, Object)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.WriteAsync
    fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).WriteAsync
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  definition: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  name: AllocateBuffer(IChannelHandlerContext)
  nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.AllocateBuffer(IChannelHandlerContext)
  fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).AllocateBuffer(IChannelHandlerContext)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: AllocateBuffer
    nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.AllocateBuffer
    fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.AllocateBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: AllocateBuffer
    nameWithType: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).AllocateBuffer
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).AllocateBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelUnregistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelUnregistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelActive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelActive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelInactive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelInactive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.ChannelRead(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelReadComplete(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelReadComplete(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelWritabilityChanged(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerRemoved(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerRemoved(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: UserEventTriggered(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.UserEventTriggered(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Flush(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Flush(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: BindAsync(IChannelHandlerContext, EndPoint)
  nameWithType: ChannelHandlerAdapter.BindAsync(IChannelHandlerContext, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  nameWithType: ChannelHandlerAdapter.ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DisconnectAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DisconnectAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: CloseAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.CloseAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelHandlerAdapter.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DeregisterAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DeregisterAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Read(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Read(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: EnsureNotSharable()
  nameWithType: ChannelHandlerAdapter.EnsureNotSharable()
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: IsSharable
  nameWithType: ChannelHandlerAdapter.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: DotNetty.Codecs.MessageToByteEncoder`1
  commentId: T:DotNetty.Codecs.MessageToByteEncoder`1
  isExternal: true
  name: MessageToByteEncoder<T>
  nameWithType: MessageToByteEncoder<T>
  fullName: DotNetty.Codecs.MessageToByteEncoder<T>
  nameWithType.vb: MessageToByteEncoder(Of T)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of T)
  name.vb: MessageToByteEncoder(Of T)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1
    name: MessageToByteEncoder
    nameWithType: MessageToByteEncoder
    fullName: DotNetty.Codecs.MessageToByteEncoder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1
    name: MessageToByteEncoder
    nameWithType: MessageToByteEncoder
    fullName: DotNetty.Codecs.MessageToByteEncoder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs
  commentId: N:DotNetty.Codecs
  isExternal: true
  name: DotNetty.Codecs
  nameWithType: DotNetty.Codecs
  fullName: DotNetty.Codecs
- uid: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
  isExternal: true
  name: AcceptOutboundMessage(Object)
  nameWithType: MessageToByteEncoder<T>.AcceptOutboundMessage(Object)
  fullName: DotNetty.Codecs.MessageToByteEncoder<T>.AcceptOutboundMessage(System.Object)
  nameWithType.vb: MessageToByteEncoder(Of T).AcceptOutboundMessage(Object)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of T).AcceptOutboundMessage(System.Object)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
    name: AcceptOutboundMessage
    nameWithType: MessageToByteEncoder<T>.AcceptOutboundMessage
    fullName: DotNetty.Codecs.MessageToByteEncoder<T>.AcceptOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AcceptOutboundMessage(System.Object)
    name: AcceptOutboundMessage
    nameWithType: MessageToByteEncoder(Of T).AcceptOutboundMessage
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of T).AcceptOutboundMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: MessageToByteEncoder<T>.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Codecs.MessageToByteEncoder<T>.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  nameWithType.vb: MessageToByteEncoder(Of T).WriteAsync(IChannelHandlerContext, Object)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of T).WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: MessageToByteEncoder<T>.WriteAsync
    fullName: DotNetty.Codecs.MessageToByteEncoder<T>.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: MessageToByteEncoder(Of T).WriteAsync
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of T).WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  isExternal: true
  name: AllocateBuffer(IChannelHandlerContext)
  nameWithType: MessageToByteEncoder<T>.AllocateBuffer(IChannelHandlerContext)
  fullName: DotNetty.Codecs.MessageToByteEncoder<T>.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: MessageToByteEncoder(Of T).AllocateBuffer(IChannelHandlerContext)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of T).AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: AllocateBuffer
    nameWithType: MessageToByteEncoder<T>.AllocateBuffer
    fullName: DotNetty.Codecs.MessageToByteEncoder<T>.AllocateBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.AllocateBuffer(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: AllocateBuffer
    nameWithType: MessageToByteEncoder(Of T).AllocateBuffer
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of T).AllocateBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus},DotNetty.Buffers.IByteBuffer)
  parent: DotNetty.Codecs.MessageToByteEncoder{NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}}
  definition: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
  name: Encode(IChannelHandlerContext, LoginResponse<LoginStatus>, IByteBuffer)
  nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.Encode(IChannelHandlerContext, LoginResponse<LoginStatus>, IByteBuffer)
  fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.Encode(DotNetty.Transport.Channels.IChannelHandlerContext, NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>, DotNetty.Buffers.IByteBuffer)
  nameWithType.vb: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).Encode(IChannelHandlerContext, LoginResponse(Of LoginStatus), IByteBuffer)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).Encode(DotNetty.Transport.Channels.IChannelHandlerContext, NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus), DotNetty.Buffers.IByteBuffer)
  name.vb: Encode(IChannelHandlerContext, LoginResponse(Of LoginStatus), IByteBuffer)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
    name: Encode
    nameWithType: MessageToByteEncoder<LoginResponse<LoginStatus>>.Encode
    fullName: DotNetty.Codecs.MessageToByteEncoder<NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>>.Encode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
    name: Encode
    nameWithType: MessageToByteEncoder(Of LoginResponse(Of LoginStatus)).Encode
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)).Encode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode*
  commentId: Overload:NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode
  name: Encode
  nameWithType: LoginEncoder.Encode
  fullName: NetScape.Modules.LoginProtocol.Handlers.LoginEncoder.Encode
- uid: DotNetty.Transport.Channels.IChannelHandlerContext
  commentId: T:DotNetty.Transport.Channels.IChannelHandlerContext
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: DotNetty.Transport.Channels.IChannelHandlerContext
- uid: NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}
  commentId: T:NetScape.Abstractions.Model.Login.LoginResponse{NetScape.Modules.LoginProtocol.LoginStatus}
  parent: NetScape.Abstractions.Model.Login
  definition: NetScape.Abstractions.Model.Login.LoginResponse`1
  name: LoginResponse<LoginStatus>
  nameWithType: LoginResponse<LoginStatus>
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<NetScape.Modules.LoginProtocol.LoginStatus>
  nameWithType.vb: LoginResponse(Of LoginStatus)
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of NetScape.Modules.LoginProtocol.LoginStatus)
  name.vb: LoginResponse(Of LoginStatus)
  spec.csharp:
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Modules.LoginProtocol.LoginStatus
    name: LoginStatus
    nameWithType: LoginStatus
    fullName: NetScape.Modules.LoginProtocol.LoginStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Buffers.IByteBuffer
  commentId: T:DotNetty.Buffers.IByteBuffer
  parent: DotNetty.Buffers
  isExternal: true
  name: IByteBuffer
  nameWithType: IByteBuffer
  fullName: DotNetty.Buffers.IByteBuffer
- uid: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
  commentId: M:DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
  isExternal: true
  name: Encode(IChannelHandlerContext, T, IByteBuffer)
  nameWithType: MessageToByteEncoder<T>.Encode(IChannelHandlerContext, T, IByteBuffer)
  fullName: DotNetty.Codecs.MessageToByteEncoder<T>.Encode(DotNetty.Transport.Channels.IChannelHandlerContext, T, DotNetty.Buffers.IByteBuffer)
  nameWithType.vb: MessageToByteEncoder(Of T).Encode(IChannelHandlerContext, T, IByteBuffer)
  fullName.vb: DotNetty.Codecs.MessageToByteEncoder(Of T).Encode(DotNetty.Transport.Channels.IChannelHandlerContext, T, DotNetty.Buffers.IByteBuffer)
  spec.csharp:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
    name: Encode
    nameWithType: MessageToByteEncoder<T>.Encode
    fullName: DotNetty.Codecs.MessageToByteEncoder<T>.Encode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.MessageToByteEncoder`1.Encode(DotNetty.Transport.Channels.IChannelHandlerContext,`0,DotNetty.Buffers.IByteBuffer)
    name: Encode
    nameWithType: MessageToByteEncoder(Of T).Encode
    fullName: DotNetty.Codecs.MessageToByteEncoder(Of T).Encode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Model.Login.LoginResponse`1
  commentId: T:NetScape.Abstractions.Model.Login.LoginResponse`1
  name: LoginResponse<TStatus>
  nameWithType: LoginResponse<TStatus>
  fullName: NetScape.Abstractions.Model.Login.LoginResponse<TStatus>
  nameWithType.vb: LoginResponse(Of TStatus)
  fullName.vb: NetScape.Abstractions.Model.Login.LoginResponse(Of TStatus)
  name.vb: LoginResponse(Of TStatus)
  spec.csharp:
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TStatus
    nameWithType: TStatus
    fullName: TStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NetScape.Abstractions.Model.Login.LoginResponse`1
    name: LoginResponse
    nameWithType: LoginResponse
    fullName: NetScape.Abstractions.Model.Login.LoginResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStatus
    nameWithType: TStatus
    fullName: TStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.Model.Login
  commentId: N:NetScape.Abstractions.Model.Login
  name: NetScape.Abstractions.Model.Login
  nameWithType: NetScape.Abstractions.Model.Login
  fullName: NetScape.Abstractions.Model.Login
- uid: DotNetty.Buffers
  commentId: N:DotNetty.Buffers
  isExternal: true
  name: DotNetty.Buffers
  nameWithType: DotNetty.Buffers
  fullName: DotNetty.Buffers
