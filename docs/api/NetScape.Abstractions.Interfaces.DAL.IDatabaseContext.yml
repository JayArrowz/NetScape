### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  commentId: T:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  id: IDatabaseContext
  parent: NetScape.Abstractions.Interfaces.DAL
  children:
  - NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
  - NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges
  - NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDatabaseContext
  nameWithType: IDatabaseContext
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  type: Interface
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: IDatabaseContext
    path: src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
    startLine: 8
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Interfaces.DAL
  syntax:
    content: 'public interface IDatabaseContext : IDisposable'
    content.vb: >-
      Public Interface IDatabaseContext
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
  commentId: P:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
  id: Players
  parent: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: IDatabaseContext.Players
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Players
    path: src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
    startLine: 10
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Interfaces.DAL
  syntax:
    content: DbSet<Player> Players { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{NetScape.Abstractions.Model.Game.Player}
    content.vb: Property Players As DbSet(Of Player)
  overload: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players*
  modifiers.csharp:
  - get
  - set
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges
  commentId: M:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges
  id: SaveChanges
  parent: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  langs:
  - csharp
  - vb
  name: SaveChanges()
  nameWithType: IDatabaseContext.SaveChanges()
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges()
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: SaveChanges
    path: src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
    startLine: 11
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Interfaces.DAL
  syntax:
    content: int SaveChanges()
    return:
      type: System.Int32
    content.vb: Function SaveChanges As Integer
  overload: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges*
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync(System.Threading.CancellationToken)
  id: SaveChangesAsync(System.Threading.CancellationToken)
  parent: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext
  langs:
  - csharp
  - vb
  name: SaveChangesAsync(CancellationToken)
  nameWithType: IDatabaseContext.SaveChangesAsync(CancellationToken)
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: SaveChangesAsync
    path: src/NetScape.Abstractions/Interfaces/DAL/IDatabaseContext.cs
    startLine: 12
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Interfaces.DAL
  syntax:
    content: Task<int> SaveChangesAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function SaveChangesAsync(cancellationToken As CancellationToken) As Task(Of Integer)
  overload: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync*
references:
- uid: NetScape.Abstractions.Interfaces.DAL
  commentId: N:NetScape.Abstractions.Interfaces.DAL
  name: NetScape.Abstractions.Interfaces.DAL
  nameWithType: NetScape.Abstractions.Interfaces.DAL
  fullName: NetScape.Abstractions.Interfaces.DAL
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players*
  commentId: Overload:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
  name: Players
  nameWithType: IDatabaseContext.Players
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.Players
- uid: Microsoft.EntityFrameworkCore.DbSet{NetScape.Abstractions.Model.Game.Player}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{NetScape.Abstractions.Model.Game.Player}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Player>
  nameWithType: DbSet<Player>
  fullName: Microsoft.EntityFrameworkCore.DbSet<NetScape.Abstractions.Model.Game.Player>
  nameWithType.vb: DbSet(Of Player)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of NetScape.Abstractions.Model.Game.Player)
  name.vb: DbSet(Of Player)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NetScape.Abstractions.Model.Game.Player
    name: Player
    nameWithType: Player
    fullName: NetScape.Abstractions.Model.Game.Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NetScape.Abstractions.Model.Game.Player
    name: Player
    nameWithType: Player
    fullName: NetScape.Abstractions.Model.Game.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges*
  commentId: Overload:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges
  name: SaveChanges
  nameWithType: IDatabaseContext.SaveChanges
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChanges
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync*
  commentId: Overload:NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: IDatabaseContext.SaveChangesAsync
  fullName: NetScape.Abstractions.Interfaces.DAL.IDatabaseContext.SaveChangesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
