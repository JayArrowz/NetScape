### YamlMime:ManagedReference
items:
- uid: NetScape.FileSystem
  commentId: T:NetScape.FileSystem
  id: FileSystem
  parent: NetScape
  children:
  - NetScape.FileSystem.BasePath
  - NetScape.FileSystem.CachePath
  langs:
  - csharp
  - vb
  name: FileSystem
  nameWithType: FileSystem
  fullName: NetScape.FileSystem
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape/FileSystem.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FileSystem
    path: src/NetScape/FileSystem.cs
    startLine: 6
  assemblies:
  - NetScape
  namespace: NetScape
  syntax:
    content: 'public class FileSystem : IFileSystem'
    content.vb: >-
      Public Class FileSystem
          Implements IFileSystem
  inheritance:
  - System.Object
  implements:
  - NetScape.Abstractions.FileSystem.IFileSystem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.FileSystem.BasePath
  commentId: P:NetScape.FileSystem.BasePath
  id: BasePath
  parent: NetScape.FileSystem
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: FileSystem.BasePath
  fullName: NetScape.FileSystem.BasePath
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape/FileSystem.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: BasePath
    path: src/NetScape/FileSystem.cs
    startLine: 11
  assemblies:
  - NetScape
  namespace: NetScape
  syntax:
    content: public string BasePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BasePath As String
  overload: NetScape.FileSystem.BasePath*
  implements:
  - NetScape.Abstractions.FileSystem.IFileSystem.BasePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NetScape.FileSystem.CachePath
  commentId: P:NetScape.FileSystem.CachePath
  id: CachePath
  parent: NetScape.FileSystem
  langs:
  - csharp
  - vb
  name: CachePath
  nameWithType: FileSystem.CachePath
  fullName: NetScape.FileSystem.CachePath
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape/FileSystem.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: CachePath
    path: src/NetScape/FileSystem.cs
    startLine: 12
  assemblies:
  - NetScape
  namespace: NetScape
  syntax:
    content: public string CachePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CachePath As String
  overload: NetScape.FileSystem.CachePath*
  implements:
  - NetScape.Abstractions.FileSystem.IFileSystem.CachePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NetScape
  commentId: N:NetScape
  name: NetScape
  nameWithType: NetScape
  fullName: NetScape
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NetScape.Abstractions.FileSystem.IFileSystem
  commentId: T:NetScape.Abstractions.FileSystem.IFileSystem
  parent: NetScape.Abstractions.FileSystem
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: NetScape.Abstractions.FileSystem.IFileSystem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Abstractions.FileSystem
  commentId: N:NetScape.Abstractions.FileSystem
  name: NetScape.Abstractions.FileSystem
  nameWithType: NetScape.Abstractions.FileSystem
  fullName: NetScape.Abstractions.FileSystem
- uid: NetScape.FileSystem.BasePath*
  commentId: Overload:NetScape.FileSystem.BasePath
  name: BasePath
  nameWithType: FileSystem.BasePath
  fullName: NetScape.FileSystem.BasePath
- uid: NetScape.Abstractions.FileSystem.IFileSystem.BasePath
  commentId: P:NetScape.Abstractions.FileSystem.IFileSystem.BasePath
  parent: NetScape.Abstractions.FileSystem.IFileSystem
  name: BasePath
  nameWithType: IFileSystem.BasePath
  fullName: NetScape.Abstractions.FileSystem.IFileSystem.BasePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NetScape.FileSystem.CachePath*
  commentId: Overload:NetScape.FileSystem.CachePath
  name: CachePath
  nameWithType: FileSystem.CachePath
  fullName: NetScape.FileSystem.CachePath
- uid: NetScape.Abstractions.FileSystem.IFileSystem.CachePath
  commentId: P:NetScape.Abstractions.FileSystem.IFileSystem.CachePath
  parent: NetScape.Abstractions.FileSystem.IFileSystem
  name: CachePath
  nameWithType: IFileSystem.CachePath
  fullName: NetScape.Abstractions.FileSystem.IFileSystem.CachePath
