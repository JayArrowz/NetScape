### YamlMime:ManagedReference
items:
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  commentId: T:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  id: JagaFile.AudioChunkDescriptor
  parent: NetScape.Modules.Cache.FileTypes
  children:
  - NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor(System.Int32,System.Int32,System.Int32)
  - NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
  - NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
  - NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
  langs:
  - csharp
  - vb
  name: JagaFile.AudioChunkDescriptor
  nameWithType: JagaFile.AudioChunkDescriptor
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: AudioChunkDescriptor
    path: src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
    startLine: 69
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public class AudioChunkDescriptor
    content.vb: Public Class AudioChunkDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  langs:
  - csharp
  - vb
  name: AudioChunkDescriptor(Int32, Int32, Int32)
  nameWithType: JagaFile.AudioChunkDescriptor.AudioChunkDescriptor(Int32, Int32, Int32)
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.AudioChunkDescriptor(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: .ctor
    path: src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
    startLine: 71
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  syntax:
    content: public AudioChunkDescriptor(int position, int length, int fileId)
    parameters:
    - id: position
      type: System.Int32
    - id: length
      type: System.Int32
    - id: fileId
      type: System.Int32
    content.vb: Public Sub New(position As Integer, length As Integer, fileId As Integer)
  overload: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
  commentId: P:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
  id: FileId
  parent: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  langs:
  - csharp
  - vb
  name: FileId
  nameWithType: JagaFile.AudioChunkDescriptor.FileId
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FileId
    path: src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
    startLine: 82
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  summary: "\nThe file id within the same index that contains the next chunk.\nIf 0, this is the file contained within the jaga file.\n"
  example: []
  syntax:
    content: public int FileId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FileId As Integer
  overload: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
  commentId: P:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
  id: Length
  parent: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: JagaFile.AudioChunkDescriptor.Length
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Length
    path: src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
    startLine: 87
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  summary: "\nThe length in bytes of this chunk.\n"
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
  commentId: P:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
  id: Position
  parent: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: JagaFile.AudioChunkDescriptor.Position
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Position
    path: src/NetScape.Modules.Cache/FileTypes/JagaFile.cs
    startLine: 92
  assemblies:
  - NetScape.Modules.Cache
  namespace: NetScape.Modules.Cache.FileTypes
  summary: "\nPosition in bytes of the combined audio data.\n"
  example: []
  syntax:
    content: public int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Position As Integer
  overload: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NetScape.Modules.Cache.FileTypes
  commentId: N:NetScape.Modules.Cache.FileTypes
  name: NetScape.Modules.Cache.FileTypes
  nameWithType: NetScape.Modules.Cache.FileTypes
  fullName: NetScape.Modules.Cache.FileTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.#ctor
  name: AudioChunkDescriptor
  nameWithType: JagaFile.AudioChunkDescriptor.AudioChunkDescriptor
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.AudioChunkDescriptor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
  name: FileId
  nameWithType: JagaFile.AudioChunkDescriptor.FileId
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.FileId
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
  name: Length
  nameWithType: JagaFile.AudioChunkDescriptor.Length
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Length
- uid: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position*
  commentId: Overload:NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
  name: Position
  nameWithType: JagaFile.AudioChunkDescriptor.Position
  fullName: NetScape.Modules.Cache.FileTypes.JagaFile.AudioChunkDescriptor.Position
