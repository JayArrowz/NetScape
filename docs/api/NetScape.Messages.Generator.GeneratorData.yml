### YamlMime:ManagedReference
items:
- uid: NetScape.Messages.Generator.GeneratorData
  commentId: T:NetScape.Messages.Generator.GeneratorData
  id: GeneratorData
  parent: NetScape.Messages.Generator
  children:
  - NetScape.Messages.Generator.GeneratorData.FrameType
  - NetScape.Messages.Generator.GeneratorData.Id
  - NetScape.Messages.Generator.GeneratorData.Name
  - NetScape.Messages.Generator.GeneratorData.Params
  langs:
  - csharp
  - vb
  name: GeneratorData
  nameWithType: GeneratorData
  fullName: NetScape.Messages.Generator.GeneratorData
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Messages.Generator/GeneratorData.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: GeneratorData
    path: src/NetScape.Modules.Messages.Generator/GeneratorData.cs
    startLine: 4
  assemblies:
  - NetScape.Modules.Messages.Generator
  namespace: NetScape.Messages.Generator
  syntax:
    content: public class GeneratorData
    content.vb: Public Class GeneratorData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetScape.Messages.Generator.GeneratorData.Name
  commentId: P:NetScape.Messages.Generator.GeneratorData.Name
  id: Name
  parent: NetScape.Messages.Generator.GeneratorData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GeneratorData.Name
  fullName: NetScape.Messages.Generator.GeneratorData.Name
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Messages.Generator/GeneratorData.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Name
    path: src/NetScape.Modules.Messages.Generator/GeneratorData.cs
    startLine: 6
  assemblies:
  - NetScape.Modules.Messages.Generator
  namespace: NetScape.Messages.Generator
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: NetScape.Messages.Generator.GeneratorData.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Messages.Generator.GeneratorData.Id
  commentId: P:NetScape.Messages.Generator.GeneratorData.Id
  id: Id
  parent: NetScape.Messages.Generator.GeneratorData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: GeneratorData.Id
  fullName: NetScape.Messages.Generator.GeneratorData.Id
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Messages.Generator/GeneratorData.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Id
    path: src/NetScape.Modules.Messages.Generator/GeneratorData.cs
    startLine: 7
  assemblies:
  - NetScape.Modules.Messages.Generator
  namespace: NetScape.Messages.Generator
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: NetScape.Messages.Generator.GeneratorData.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Messages.Generator.GeneratorData.Params
  commentId: P:NetScape.Messages.Generator.GeneratorData.Params
  id: Params
  parent: NetScape.Messages.Generator.GeneratorData
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: GeneratorData.Params
  fullName: NetScape.Messages.Generator.GeneratorData.Params
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Messages.Generator/GeneratorData.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Params
    path: src/NetScape.Modules.Messages.Generator/GeneratorData.cs
    startLine: 8
  assemblies:
  - NetScape.Modules.Messages.Generator
  namespace: NetScape.Messages.Generator
  syntax:
    content: public MessageParameters[] Params { get; set; }
    parameters: []
    return:
      type: NetScape.Messages.Generator.MessageParameters[]
    content.vb: Public Property Params As MessageParameters()
  overload: NetScape.Messages.Generator.GeneratorData.Params*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NetScape.Messages.Generator.GeneratorData.FrameType
  commentId: P:NetScape.Messages.Generator.GeneratorData.FrameType
  id: FrameType
  parent: NetScape.Messages.Generator.GeneratorData
  langs:
  - csharp
  - vb
  name: FrameType
  nameWithType: GeneratorData.FrameType
  fullName: NetScape.Messages.Generator.GeneratorData.FrameType
  type: Property
  source:
    remote:
      path: docfx_project/src/NetScape.Modules.Messages.Generator/GeneratorData.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FrameType
    path: src/NetScape.Modules.Messages.Generator/GeneratorData.cs
    startLine: 9
  assemblies:
  - NetScape.Modules.Messages.Generator
  namespace: NetScape.Messages.Generator
  syntax:
    content: public FrameType FrameType { get; set; }
    parameters: []
    return:
      type: NetScape.Modules.Messages.Builder.FrameType
    content.vb: Public Property FrameType As FrameType
  overload: NetScape.Messages.Generator.GeneratorData.FrameType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NetScape.Messages.Generator
  commentId: N:NetScape.Messages.Generator
  name: NetScape.Messages.Generator
  nameWithType: NetScape.Messages.Generator
  fullName: NetScape.Messages.Generator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NetScape.Messages.Generator.GeneratorData.Name*
  commentId: Overload:NetScape.Messages.Generator.GeneratorData.Name
  name: Name
  nameWithType: GeneratorData.Name
  fullName: NetScape.Messages.Generator.GeneratorData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NetScape.Messages.Generator.GeneratorData.Id*
  commentId: Overload:NetScape.Messages.Generator.GeneratorData.Id
  name: Id
  nameWithType: GeneratorData.Id
  fullName: NetScape.Messages.Generator.GeneratorData.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetScape.Messages.Generator.GeneratorData.Params*
  commentId: Overload:NetScape.Messages.Generator.GeneratorData.Params
  name: Params
  nameWithType: GeneratorData.Params
  fullName: NetScape.Messages.Generator.GeneratorData.Params
- uid: NetScape.Messages.Generator.MessageParameters[]
  isExternal: true
  name: MessageParameters[]
  nameWithType: MessageParameters[]
  fullName: NetScape.Messages.Generator.MessageParameters[]
  nameWithType.vb: MessageParameters()
  fullName.vb: NetScape.Messages.Generator.MessageParameters()
  name.vb: MessageParameters()
  spec.csharp:
  - uid: NetScape.Messages.Generator.MessageParameters
    name: MessageParameters
    nameWithType: MessageParameters
    fullName: NetScape.Messages.Generator.MessageParameters
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: NetScape.Messages.Generator.MessageParameters
    name: MessageParameters
    nameWithType: MessageParameters
    fullName: NetScape.Messages.Generator.MessageParameters
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Messages.Generator.GeneratorData.FrameType*
  commentId: Overload:NetScape.Messages.Generator.GeneratorData.FrameType
  name: FrameType
  nameWithType: GeneratorData.FrameType
  fullName: NetScape.Messages.Generator.GeneratorData.FrameType
- uid: NetScape.Modules.Messages.Builder.FrameType
  commentId: T:NetScape.Modules.Messages.Builder.FrameType
  parent: NetScape.Modules.Messages.Builder
  name: FrameType
  nameWithType: FrameType
  fullName: NetScape.Modules.Messages.Builder.FrameType
- uid: NetScape.Modules.Messages.Builder
  commentId: N:NetScape.Modules.Messages.Builder
  name: NetScape.Modules.Messages.Builder
  nameWithType: NetScape.Modules.Messages.Builder
  fullName: NetScape.Modules.Messages.Builder
