### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.Extensions.PathExtensions
  commentId: T:NetScape.Abstractions.Extensions.PathExtensions
  id: PathExtensions
  parent: NetScape.Abstractions.Extensions
  children:
  - NetScape.Abstractions.Extensions.PathExtensions.FixDirectory(System.String)
  - NetScape.Abstractions.Extensions.PathExtensions.InvalidCharacters
  langs:
  - csharp
  - vb
  name: PathExtensions
  nameWithType: PathExtensions
  fullName: NetScape.Abstractions.Extensions.PathExtensions
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/PathExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: PathExtensions
    path: src/NetScape.Abstractions/Extensions/PathExtensions.cs
    startLine: 4
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static class PathExtensions
    content.vb: Public Module PathExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NetScape.Abstractions.Extensions.PathExtensions.InvalidCharacters
  commentId: F:NetScape.Abstractions.Extensions.PathExtensions.InvalidCharacters
  id: InvalidCharacters
  parent: NetScape.Abstractions.Extensions.PathExtensions
  langs:
  - csharp
  - vb
  name: InvalidCharacters
  nameWithType: PathExtensions.InvalidCharacters
  fullName: NetScape.Abstractions.Extensions.PathExtensions.InvalidCharacters
  type: Field
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/PathExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: InvalidCharacters
    path: src/NetScape.Abstractions/Extensions/PathExtensions.cs
    startLine: 6
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  syntax:
    content: public static char[] InvalidCharacters
    return:
      type: System.Char[]
    content.vb: Public Shared InvalidCharacters As Char()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NetScape.Abstractions.Extensions.PathExtensions.FixDirectory(System.String)
  commentId: M:NetScape.Abstractions.Extensions.PathExtensions.FixDirectory(System.String)
  id: FixDirectory(System.String)
  parent: NetScape.Abstractions.Extensions.PathExtensions
  langs:
  - csharp
  - vb
  name: FixDirectory(String)
  nameWithType: PathExtensions.FixDirectory(String)
  fullName: NetScape.Abstractions.Extensions.PathExtensions.FixDirectory(System.String)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/Extensions/PathExtensions.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: FixDirectory
    path: src/NetScape.Abstractions/Extensions/PathExtensions.cs
    startLine: 14
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.Extensions
  summary: "\nParses the given directory and unifies its format, to be applied to unpredictable user input.\nConverts backslashes to forward slashes, and appends a directory separator.\n"
  example: []
  syntax:
    content: public static string FixDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function FixDirectory(path As String) As String
  overload: NetScape.Abstractions.Extensions.PathExtensions.FixDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NetScape.Abstractions.Extensions
  commentId: N:NetScape.Abstractions.Extensions
  name: NetScape.Abstractions.Extensions
  nameWithType: NetScape.Abstractions.Extensions
  fullName: NetScape.Abstractions.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NetScape.Abstractions.Extensions.PathExtensions.FixDirectory*
  commentId: Overload:NetScape.Abstractions.Extensions.PathExtensions.FixDirectory
  name: FixDirectory
  nameWithType: PathExtensions.FixDirectory
  fullName: NetScape.Abstractions.Extensions.PathExtensions.FixDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
