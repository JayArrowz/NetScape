### YamlMime:ManagedReference
items:
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1
  commentId: T:NetScape.Abstractions.IO.StatefulFrameDecoder`1
  id: StatefulFrameDecoder`1
  parent: NetScape.Abstractions.IO
  children:
  - NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor(`0)
  - NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  - NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object},`0)
  - NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState(`0)
  langs:
  - csharp
  - vb
  name: StatefulFrameDecoder<T>
  nameWithType: StatefulFrameDecoder<T>
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>
  type: Class
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: StatefulFrameDecoder
    path: src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
    startLine: 23
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.IO
  syntax:
    content: 'public abstract class StatefulFrameDecoder<T> : ByteToMessageDecoder, IChannelHandler'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class StatefulFrameDecoder(Of T)
          Inherits ByteToMessageDecoder
          Implements IChannelHandler
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.ChannelHandlerAdapter
  - DotNetty.Codecs.ByteToMessageDecoder
  derivedClasses:
  - NetScape.Modules.LoginProtocol.Handlers.LoginDecoder
  implements:
  - DotNetty.Transport.Channels.IChannelHandler
  inheritedMembers:
  - DotNetty.Codecs.ByteToMessageDecoder.MergeCumulator
  - DotNetty.Codecs.ByteToMessageDecoder.CompositionCumulation
  - DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
  - DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
  - DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  - DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  - DotNetty.Codecs.ByteToMessageDecoder.SingleDecode
  - DotNetty.Codecs.ByteToMessageDecoder.ActualReadableBytes
  - DotNetty.Codecs.ByteToMessageDecoder.InternalBuffer
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: StatefulFrameDecoder(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T)
  name.vb: StatefulFrameDecoder(Of T)
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor(`0)
  commentId: M:NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: NetScape.Abstractions.IO.StatefulFrameDecoder`1
  langs:
  - csharp
  - vb
  name: StatefulFrameDecoder(T)
  nameWithType: StatefulFrameDecoder<T>.StatefulFrameDecoder(T)
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.StatefulFrameDecoder(T)
  type: Constructor
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: .ctor
    path: src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
    startLine: 37
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.IO
  example: []
  syntax:
    content: public StatefulFrameDecoder(T state)
    parameters:
    - id: state
      type: '{T}'
    content.vb: Public Sub New(state As T)
  overload: NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor*
  nameWithType.vb: StatefulFrameDecoder(Of T).StatefulFrameDecoder(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).StatefulFrameDecoder(T)
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState(`0)
  commentId: M:NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState(`0)
  id: SetState(`0)
  parent: NetScape.Abstractions.IO.StatefulFrameDecoder`1
  langs:
  - csharp
  - vb
  name: SetState(T)
  nameWithType: StatefulFrameDecoder<T>.SetState(T)
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.SetState(T)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: SetState
    path: src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
    startLine: 48
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.IO
  example: []
  syntax:
    content: public void SetState(T state)
    parameters:
    - id: state
      type: '{T}'
    content.vb: Public Sub SetState(state As T)
  overload: NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState*
  nameWithType.vb: StatefulFrameDecoder(Of T).SetState(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).SetState(T)
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  commentId: M:NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  id: Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  parent: NetScape.Abstractions.IO.StatefulFrameDecoder`1
  langs:
  - csharp
  - vb
  name: Decode(IChannelHandlerContext, IByteBuffer, List<Object>)
  nameWithType: StatefulFrameDecoder<T>.Decode(IChannelHandlerContext, IByteBuffer, List<Object>)
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List<System.Object>)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Decode
    path: src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
    startLine: 53
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.IO
  syntax:
    content: protected override void Decode(IChannelHandlerContext context, IByteBuffer input, List<object> output)
    parameters:
    - id: context
      type: DotNetty.Transport.Channels.IChannelHandlerContext
    - id: input
      type: DotNetty.Buffers.IByteBuffer
    - id: output
      type: System.Collections.Generic.List{System.Object}
    content.vb: Protected Overrides Sub Decode(context As IChannelHandlerContext, input As IByteBuffer, output As List(Of Object))
  overridden: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  overload: NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode*
  nameWithType.vb: StatefulFrameDecoder(Of T).Decode(IChannelHandlerContext, IByteBuffer, List(Of Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List(Of System.Object))
  name.vb: Decode(IChannelHandlerContext, IByteBuffer, List(Of Object))
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object},`0)
  commentId: M:NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object},`0)
  id: Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object},`0)
  parent: NetScape.Abstractions.IO.StatefulFrameDecoder`1
  langs:
  - csharp
  - vb
  name: Decode(IChannelHandlerContext, IByteBuffer, List<Object>, T)
  nameWithType: StatefulFrameDecoder<T>.Decode(IChannelHandlerContext, IByteBuffer, List<Object>, T)
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List<System.Object>, T)
  type: Method
  source:
    remote:
      path: docfx_project/src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
      branch: master
      repo: https://github.com/JayArrowz/NetScape.git
    id: Decode
    path: src/NetScape.Abstractions/IO/StatefulFrameDecoder.cs
    startLine: 69
  assemblies:
  - NetScape.Abstractions
  namespace: NetScape.Abstractions.IO
  example: []
  syntax:
    content: protected abstract void Decode(IChannelHandlerContext context, IByteBuffer input, List<object> output, T state)
    parameters:
    - id: context
      type: DotNetty.Transport.Channels.IChannelHandlerContext
    - id: input
      type: DotNetty.Buffers.IByteBuffer
    - id: output
      type: System.Collections.Generic.List{System.Object}
    - id: state
      type: '{T}'
    content.vb: Protected MustOverride Sub Decode(context As IChannelHandlerContext, input As IByteBuffer, output As List(Of Object), state As T)
  overload: NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode*
  nameWithType.vb: StatefulFrameDecoder(Of T).Decode(IChannelHandlerContext, IByteBuffer, List(Of Object), T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List(Of System.Object), T)
  name.vb: Decode(IChannelHandlerContext, IByteBuffer, List(Of Object), T)
references:
- uid: NetScape.Abstractions.IO
  commentId: N:NetScape.Abstractions.IO
  name: NetScape.Abstractions.IO
  nameWithType: NetScape.Abstractions.IO
  fullName: NetScape.Abstractions.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter
  commentId: T:DotNetty.Transport.Channels.ChannelHandlerAdapter
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelHandlerAdapter
  nameWithType: ChannelHandlerAdapter
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter
- uid: DotNetty.Codecs.ByteToMessageDecoder
  commentId: T:DotNetty.Codecs.ByteToMessageDecoder
  parent: DotNetty.Codecs
  isExternal: true
  name: ByteToMessageDecoder
  nameWithType: ByteToMessageDecoder
  fullName: DotNetty.Codecs.ByteToMessageDecoder
- uid: DotNetty.Transport.Channels.IChannelHandler
  commentId: T:DotNetty.Transport.Channels.IChannelHandler
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandler
  nameWithType: IChannelHandler
  fullName: DotNetty.Transport.Channels.IChannelHandler
- uid: DotNetty.Codecs.ByteToMessageDecoder.MergeCumulator
  commentId: F:DotNetty.Codecs.ByteToMessageDecoder.MergeCumulator
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: MergeCumulator
  nameWithType: ByteToMessageDecoder.MergeCumulator
  fullName: DotNetty.Codecs.ByteToMessageDecoder.MergeCumulator
- uid: DotNetty.Codecs.ByteToMessageDecoder.CompositionCumulation
  commentId: F:DotNetty.Codecs.ByteToMessageDecoder.CompositionCumulation
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: CompositionCumulation
  nameWithType: ByteToMessageDecoder.CompositionCumulation
  fullName: DotNetty.Codecs.ByteToMessageDecoder.CompositionCumulation
- uid: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: SetCumulator(ByteToMessageDecoder.CumulationFunc)
  nameWithType: ByteToMessageDecoder.SetCumulator(ByteToMessageDecoder.CumulationFunc)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
    name: SetCumulator
    nameWithType: ByteToMessageDecoder.SetCumulator
    fullName: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc
    name: ByteToMessageDecoder.CumulationFunc
    nameWithType: ByteToMessageDecoder.CumulationFunc
    fullName: DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator(DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc)
    name: SetCumulator
    nameWithType: ByteToMessageDecoder.SetCumulator
    fullName: DotNetty.Codecs.ByteToMessageDecoder.SetCumulator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc
    name: ByteToMessageDecoder.CumulationFunc
    nameWithType: ByteToMessageDecoder.CumulationFunc
    fullName: DotNetty.Codecs.ByteToMessageDecoder.CumulationFunc
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: HandlerRemoved(IChannelHandlerContext)
  nameWithType: ByteToMessageDecoder.HandlerRemoved(IChannelHandlerContext)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ByteToMessageDecoder.HandlerRemoved
    fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ByteToMessageDecoder.HandlerRemoved
    fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: HandlerRemovedInternal(IChannelHandlerContext)
  nameWithType: ByteToMessageDecoder.HandlerRemovedInternal(IChannelHandlerContext)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemovedInternal
    nameWithType: ByteToMessageDecoder.HandlerRemovedInternal
    fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemovedInternal
    nameWithType: ByteToMessageDecoder.HandlerRemovedInternal
    fullName: DotNetty.Codecs.ByteToMessageDecoder.HandlerRemovedInternal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: ByteToMessageDecoder.ChannelRead(IChannelHandlerContext, Object)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ByteToMessageDecoder.ChannelRead
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ByteToMessageDecoder.ChannelRead
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: ChannelReadComplete(IChannelHandlerContext)
  nameWithType: ByteToMessageDecoder.ChannelReadComplete(IChannelHandlerContext)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ByteToMessageDecoder.ChannelReadComplete
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ByteToMessageDecoder.ChannelReadComplete
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: DiscardSomeReadBytes()
  nameWithType: ByteToMessageDecoder.DiscardSomeReadBytes()
  fullName: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes()
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
    name: DiscardSomeReadBytes
    nameWithType: ByteToMessageDecoder.DiscardSomeReadBytes
    fullName: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
    name: DiscardSomeReadBytes
    nameWithType: ByteToMessageDecoder.DiscardSomeReadBytes
    fullName: DotNetty.Codecs.ByteToMessageDecoder.DiscardSomeReadBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: ChannelInactive(IChannelHandlerContext)
  nameWithType: ByteToMessageDecoder.ChannelInactive(IChannelHandlerContext)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ByteToMessageDecoder.ChannelInactive
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ByteToMessageDecoder.ChannelInactive
    fullName: DotNetty.Codecs.ByteToMessageDecoder.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: CallDecode(IChannelHandlerContext, IByteBuffer, List<Object>)
  nameWithType: ByteToMessageDecoder.CallDecode(IChannelHandlerContext, IByteBuffer, List<Object>)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List<System.Object>)
  nameWithType.vb: ByteToMessageDecoder.CallDecode(IChannelHandlerContext, IByteBuffer, List(Of Object))
  fullName.vb: DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List(Of System.Object))
  name.vb: CallDecode(IChannelHandlerContext, IByteBuffer, List(Of Object))
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: CallDecode
    nameWithType: ByteToMessageDecoder.CallDecode
    fullName: DotNetty.Codecs.ByteToMessageDecoder.CallDecode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.CallDecode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: CallDecode
    nameWithType: ByteToMessageDecoder.CallDecode
    fullName: DotNetty.Codecs.ByteToMessageDecoder.CallDecode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: DecodeLast(IChannelHandlerContext, IByteBuffer, List<Object>)
  nameWithType: ByteToMessageDecoder.DecodeLast(IChannelHandlerContext, IByteBuffer, List<Object>)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List<System.Object>)
  nameWithType.vb: ByteToMessageDecoder.DecodeLast(IChannelHandlerContext, IByteBuffer, List(Of Object))
  fullName.vb: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List(Of System.Object))
  name.vb: DecodeLast(IChannelHandlerContext, IByteBuffer, List(Of Object))
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: DecodeLast
    nameWithType: ByteToMessageDecoder.DecodeLast
    fullName: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: DecodeLast
    nameWithType: ByteToMessageDecoder.DecodeLast
    fullName: DotNetty.Codecs.ByteToMessageDecoder.DecodeLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Codecs.ByteToMessageDecoder.SingleDecode
  commentId: P:DotNetty.Codecs.ByteToMessageDecoder.SingleDecode
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: SingleDecode
  nameWithType: ByteToMessageDecoder.SingleDecode
  fullName: DotNetty.Codecs.ByteToMessageDecoder.SingleDecode
- uid: DotNetty.Codecs.ByteToMessageDecoder.ActualReadableBytes
  commentId: P:DotNetty.Codecs.ByteToMessageDecoder.ActualReadableBytes
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: ActualReadableBytes
  nameWithType: ByteToMessageDecoder.ActualReadableBytes
  fullName: DotNetty.Codecs.ByteToMessageDecoder.ActualReadableBytes
- uid: DotNetty.Codecs.ByteToMessageDecoder.InternalBuffer
  commentId: P:DotNetty.Codecs.ByteToMessageDecoder.InternalBuffer
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: InternalBuffer
  nameWithType: ByteToMessageDecoder.InternalBuffer
  fullName: DotNetty.Codecs.ByteToMessageDecoder.InternalBuffer
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelUnregistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelUnregistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelActive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelActive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelWritabilityChanged(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: UserEventTriggered(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.UserEventTriggered(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Flush(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Flush(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: BindAsync(IChannelHandlerContext, EndPoint)
  nameWithType: ChannelHandlerAdapter.BindAsync(IChannelHandlerContext, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  nameWithType: ChannelHandlerAdapter.ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DisconnectAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DisconnectAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: CloseAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.CloseAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelHandlerAdapter.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DeregisterAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DeregisterAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Read(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Read(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: EnsureNotSharable()
  nameWithType: ChannelHandlerAdapter.EnsureNotSharable()
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: IsSharable
  nameWithType: ChannelHandlerAdapter.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: DotNetty.Codecs
  commentId: N:DotNetty.Codecs
  isExternal: true
  name: DotNetty.Codecs
  nameWithType: DotNetty.Codecs
  fullName: DotNetty.Codecs
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor*
  commentId: Overload:NetScape.Abstractions.IO.StatefulFrameDecoder`1.#ctor
  name: StatefulFrameDecoder
  nameWithType: StatefulFrameDecoder<T>.StatefulFrameDecoder
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.StatefulFrameDecoder
  nameWithType.vb: StatefulFrameDecoder(Of T).StatefulFrameDecoder
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).StatefulFrameDecoder
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState*
  commentId: Overload:NetScape.Abstractions.IO.StatefulFrameDecoder`1.SetState
  name: SetState
  nameWithType: StatefulFrameDecoder<T>.SetState
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.SetState
  nameWithType.vb: StatefulFrameDecoder(Of T).SetState
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).SetState
- uid: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  commentId: M:DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
  parent: DotNetty.Codecs.ByteToMessageDecoder
  isExternal: true
  name: Decode(IChannelHandlerContext, IByteBuffer, List<Object>)
  nameWithType: ByteToMessageDecoder.Decode(IChannelHandlerContext, IByteBuffer, List<Object>)
  fullName: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List<System.Object>)
  nameWithType.vb: ByteToMessageDecoder.Decode(IChannelHandlerContext, IByteBuffer, List(Of Object))
  fullName.vb: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext, DotNetty.Buffers.IByteBuffer, System.Collections.Generic.List(Of System.Object))
  name.vb: Decode(IChannelHandlerContext, IByteBuffer, List(Of Object))
  spec.csharp:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: Decode
    nameWithType: ByteToMessageDecoder.Decode
    fullName: DotNetty.Codecs.ByteToMessageDecoder.Decode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Codecs.ByteToMessageDecoder.Decode(DotNetty.Transport.Channels.IChannelHandlerContext,DotNetty.Buffers.IByteBuffer,System.Collections.Generic.List{System.Object})
    name: Decode
    nameWithType: ByteToMessageDecoder.Decode
    fullName: DotNetty.Codecs.ByteToMessageDecoder.Decode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetty.Buffers.IByteBuffer
    name: IByteBuffer
    nameWithType: IByteBuffer
    fullName: DotNetty.Buffers.IByteBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode*
  commentId: Overload:NetScape.Abstractions.IO.StatefulFrameDecoder`1.Decode
  name: Decode
  nameWithType: StatefulFrameDecoder<T>.Decode
  fullName: NetScape.Abstractions.IO.StatefulFrameDecoder<T>.Decode
  nameWithType.vb: StatefulFrameDecoder(Of T).Decode
  fullName.vb: NetScape.Abstractions.IO.StatefulFrameDecoder(Of T).Decode
- uid: DotNetty.Transport.Channels.IChannelHandlerContext
  commentId: T:DotNetty.Transport.Channels.IChannelHandlerContext
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: DotNetty.Transport.Channels.IChannelHandlerContext
- uid: DotNetty.Buffers.IByteBuffer
  commentId: T:DotNetty.Buffers.IByteBuffer
  parent: DotNetty.Buffers
  isExternal: true
  name: IByteBuffer
  nameWithType: IByteBuffer
  fullName: DotNetty.Buffers.IByteBuffer
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Buffers
  commentId: N:DotNetty.Buffers
  isExternal: true
  name: DotNetty.Buffers
  nameWithType: DotNetty.Buffers
  fullName: DotNetty.Buffers
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
